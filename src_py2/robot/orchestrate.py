# -*- coding: utf-8 -*-

import time

class Orchestrate(object):
    def __init__(self, robot_1, robot_2):
        self.robot_1 = robot_1
        self.robot_2 = robot_2


        ### THIS STUFF IS JUST TO FILL IN TERMS THAT NEED TO BE GOT FROM INPUT OR CONFIG ###
        self.robot_1.team_condition = 'O'
        #self.robot_1.team_condition = 'P'
        self.robot_1.exp_name = 'Zeek'
        self.robot_2.exp_name = 'Zork'
        
        self.participant_1 = robot_1
        self.participant_2 = robot_2
        self.participant_1.exp_name = 'Bob'
        self.participant_2.exp_name = 'Jim'
        self.participant_1.exp_name_phonetic = 'Bobbo'
        self.participant_2.exp_name_phoneic = 'Jimbo'
        self.participant_1_place = "Brisbane"
        self.participant_2_place = "China"
        self.participant_1_hobby_your = "sporking up"
        self.participant_2_hobby_your = "fropping off"

        self.sr = True
 
        self.lines = {

            "welcome" : [
                "Hello, and welcome to the experiment.",
                "Greetings."
            ],

            "my name is" : [
                "My name is: {}".format(self.robot_1.exp_name),
                "And I am: {}.  At your service.".format(self.robot_2.exp_name)
            ],

            "what is your name?" : [
                "What is your name? dear human.",
                "May I enquire what your name is?"
                ],

            "is name pronunciation correct?" : [
                "{}: Am I saying that right?".format(self.participant_1.exp_name),
                "Is: {} satisfactory?".format(self.participant_2.exp_name)
            ],

            "first apology" : [
                "Oh, I apologize for my ah kweerd robot voice.  Can you say your name again?",
                "My sin shere aporlogies for my pronounciazion.  Please let me hear your name again."
            ],    

            "final apology" : [
                "Well, shoot. Hopefully you don't take offense, and you know what I mean when I say: {}".format(self.participant_1.exp_name),
                "Oh dear. Well, I do my best and no more.  I hope you can live with it, if I call you: {}".format(self.participant_2.exp_name)
            ],

            "an honor to shake your hand" : [
                "It would be a great honor for me to shake your hand.",
                "Meeting you is a grandiose honor for me, I assure you.  May I shake your hand?"
            ],

            "looking forward": [
                "I am looking forward to playing with you.",
                "I am exceedingly eager to play with you."
            ]
        }

    def get_index_num(self, robot_x):

        bot_index = int(self.robot_1 != robot_x)   # 0 if equal, 1 if different
        bot_num = bot_index + 1 

        return bot_index, bot_num

    def intro_welcome(self, robot_x):

        bot_index, bot_num = self.get_index_num(robot_x)

        robot_x.robot.tts.post.say(self.lines["welcome"][bot_index])
        robot_x.robot.mm.use_motion_library("welcome_{}".format(bot_num))

    def intro_name_exchange(self, robot_x, participant_x):
 
        bot_index, bot_num = self.get_index_num(robot_x)     

        robot_x.robot.tts.post.say(self.lines["my name is"][bot_index])
        robot_x.robot.mm.use_motion_library("my name is_{}".format(bot_num))

        robot_x.robot.tts.post.say(self.lines["what is your name?"][bot_index])
        robot_x.robot.mm.use_motion_library("what is your name_{}".format(bot_num))

        # if sr:    
        #     participant_1.exp_name = lstn.listen(self.robot_1.robot, 2)    
        # else:    
        #     safe_input.safe_input("\nPress <ENTER> after participant has stated name.", 'enter')

        robot_x.robot.tts.post.say(self.lines["is name pronunciation correct?"][bot_index])
        robot_x.robot.mm.use_motion_library("is name pronunciation correct_{}".format(bot_num))

        if self.sr:
            # query = "Press my hand for yes or my foot for no."
            # response = game_submod.am_i_right(query, self.robot_1.robot, joint_names_list, suppress)
            response = "no"  # XXXX Placeholder for actual response

            if response == "yes":
                pass
            elif response == "no": 
                robot_x.robot.tts.post.say(self.lines["first apology"][bot_index])
                joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.2224719524383545, -0.2224719524383545, 0.007627964019775391, 0.007627964019775391, 0.007627964019775391, 0.0060939788818359375, 0.22238802909851074, -0.015382051467895508, -0.015382051467895508]], ['HeadPitch', [0.4693620204925537, 0.4693620204925537, 0.29141807556152344, 0.2622721195220947, 0.2622721195220947, 0.2622721195220947, 0.23619413375854492, 0.5752079486846924, 0.5767421722412109]], ['LShoulderPitch', [0.6258301734924316, 0.6288981437683105, 0.6611120700836182, 0.48163414001464844, 0.48163414001464844, 0.9602420330047607, 0.967911958694458, 1.0967681407928467, 1.0906319618225098]], ['LShoulderRoll', [-0.1764519214630127, -0.17491793632507324, -0.14423799514770508, 0.19631004333496094, 0.19631004333496094, 0.3251659870147705, 0.32363200187683105, 0.3082921504974365, 0.39573001861572266]], ['LElbowYaw', [-0.48018407821655273, -0.48018407821655273, -0.4771158695220947, -1.3499622344970703, -1.3499622344970703, -1.3208160400390625, -1.3208160400390625, -0.9449858665466309, -0.6750020980834961]], ['LElbowRoll', [-1.560036063194275, -1.5585020780563354, -1.5431621074676514, -1.514016032218933, -1.514016032218933, -1.2977221012115479, -1.2992560863494873, -1.3575481176376343, -1.348344087600708]], ['LWristYaw', [-1.0738420486450195, -1.0738420486450195, -1.089181900024414, -1.1628141403198242, -1.1628141403198242, -1.149007797241211, -1.149007797241211, -0.8805580139160156, -0.7317600250244141]], ['LHand', [0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702]], ['RShoulderPitch', [0.8790240287780762, 0.8805580139160156, 0.8805580139160156, 0.8115279674530029, 0.8115279674530029, 0.848344087600708, 0.8468098640441895, 0.9449858665466309, 0.9526557922363281]], ['RShoulderRoll', [-0.21480202674865723, -0.21480202674865723, -0.2224719524383545, 0.10733795166015625, 0.10733795166015625, -0.047595977783203125, -0.047595977783203125, -0.25621986389160156, -0.31604599952697754]], ['RElbowYaw', [0.38652610778808594, 0.38652610778808594, 0.3880600929260254, 0.5399260520935059, 0.5399260520935059, 0.6120240688323975, 0.6058881282806396, 0.5982179641723633, 0.4862360954284668]], ['RElbowRoll', [1.1398038864135742, 1.1398038864135742, 1.1398038864135742, 1.4404678344726562, 1.4389338493347168, 1.299339771270752, 1.296271800994873, 1.245649814605713, 1.2165040969848633]], ['RWristYaw', [0.23466014862060547, 0.23466014862060547, 0.23926210403442383, 1.1719341278076172, 1.1719341278076172, 1.1888080835342407, 1.1888080835342407, 1.2026140689849854, 1.2041480541229248]], ['RHand', [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2]]]]
                time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['HeadPitch', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['LShoulderPitch', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['LShoulderRoll', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['LElbowYaw', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['LElbowRoll', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['LWristYaw', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['LHand', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['RShoulderPitch', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['RShoulderRoll', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['RElbowYaw', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['RElbowRoll', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['RWristYaw', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]], ['RHand', [0.8, 1.0, 1.5, 3.0300000000000002, 3.6300000000000003, 4.630000000000001, 5.030000000000001, 5.730000000000001, 6.130000000000002]]]]

                # participant_1.exp_name = lstn.listen(self.robot_1.robot, 2)    
    
                robot_x.robot.tts.post.say("How about: {}?".format(participant_x.exp_name))
                joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.08432793617248535, 0.08432793617248535, 0.08432793617248535]], ['HeadPitch', [0.029103994369506836, 0.029103994369506836, 0.029103994369506836]], ['LShoulderPitch', [0.9633100032806396, 0.9648439884185791, 0.9985921382904053]], ['LShoulderRoll', [0.24539804458618164, 0.2438640594482422, 0.2990880012512207]], ['LElbowYaw', [-0.6397199630737305, -0.638185977935791, -0.6765360832214355]], ['LElbowRoll', [-1.4342480897903442, -1.4342480897903442, -1.1489241123199463]], ['LWristYaw', [-1.7856178283691406, -1.773345947265625, -1.6859078407287598]], ['LHand', [0.6863999962806702, 0.6863999962806702, 0.6863999962806702]], ['RShoulderPitch', [0.8728880882263184, 0.8728880882263184, 0.8728880882263184]], ['RShoulderRoll', [-0.2086658477783203, -0.2086658477783203, -0.2086658477783203]], ['RElbowYaw', [0.42180800437927246, 0.42180800437927246, 0.42180800437927246]], ['RElbowRoll', [1.0170841217041016, 1.0170841217041016, 1.0170841217041016]], ['RWristYaw', [0.6196939945220947, 0.6196939945220947, 0.6196939945220947]], ['RHand', [0.2, 0.2, 0.2]]]]
                time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.81, 1.81, 2.21]], ['HeadPitch', [0.81, 1.81, 2.21]], ['LShoulderPitch', [0.81, 1.81, 2.21]], ['LShoulderRoll', [0.81, 1.81, 2.21]], ['LElbowYaw', [0.81, 1.81, 2.21]], ['LElbowRoll', [0.81, 1.81, 2.21]], ['LWristYaw', [0.81, 1.81, 2.21]], ['LHand', [0.81, 1.81, 2.21]], ['RShoulderPitch', [0.81, 1.81, 2.21]], ['RShoulderRoll', [0.81, 1.81, 2.21]], ['RElbowYaw', [0.81, 1.81, 2.21]], ['RElbowRoll', [0.81, 1.81, 2.21]], ['RWristYaw', [0.81, 1.81, 2.21]], ['RHand', [0.81, 1.81, 2.21]]]]
                        
                #query = "Press my hand for yes or my foot for no."
                #response = game_submod.am_i_right(query, self.robot_1.robot, joint_names_list, suppress)
                response = "no"  # XXXX Placeholder for actual response
                if response == "yes":
                    pass
                elif response == "no": 
                    robot_x.robot.tts.post.say(self.lines["final apology"][bot_index])
                    joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.14722204208374023, 0.21625208854675293, 0.21625208854675293, 0.27454400062561035, 0.2730100154876709, 0.15335798263549805, 0.15335798263549805, 0.23926210403442383, 0.21932005882263184]], ['HeadPitch', [0.16409611701965332, 0.13341593742370605, -0.4326300621032715, 0.1088719367980957, 0.1088719367980957, 0.03984212875366211, 0.04137611389160156, 0.03984212875366211, 0.23466014862060547]], ['LShoulderPitch', [0.8866100311279297, 0.894279956817627, 0.897348165512085, 0.9019501209259033, 0.9449019432067871, 0.8037741184234619, 0.8053081035614014, 0.9019501209259033, 0.894279956817627]], ['LShoulderRoll', [0.19324207305908203, 0.19017410278320312, 0.19170808792114258, 0.16256213188171387, 0.1978440284729004, 0.40186595916748047, 0.40186595916748047, 0.480100154876709, 0.13801813125610352]], ['LElbowYaw', [-0.44029998779296875, -0.4648439884185791, -0.46637797355651855, -0.5952339172363281, -0.9189081192016602, -1.0278220176696777, -1.0278220176696777, -1.2886018753051758, -0.6366519927978516]], ['LElbowRoll', [-0.9955241680145264, -0.9970581531524658, -0.9955241680145264, -0.897348165512085, -0.9188239574432373, -0.9249601364135742, -0.9249601364135742, -0.9172899723052979, -0.9019501209259033]], ['LWristYaw', [-0.17031598091125488, -0.17031598091125488, -0.17491793632507324, -1.7610740661621094, -1.8086280822753906, -1.7748799324035645, -1.7641420364379883, -1.8561820983886719, -0.5476799011230469]], ['LHand', [0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702]], ['RShoulderPitch', [-0.21011614799499512, -0.12727999687194824, 0.027653932571411133, 0.8053920269012451, 0.8007900714874268, 0.8023240566253662, 0.8007900714874268, 0.8007900714874268, 0.7194879055023193]], ['RShoulderRoll', [0.04904603958129883, 0.3313021659851074, 0.33743810653686523, 0.14262008666992188, -0.056799888610839844, -0.06907200813293457, -0.06907200813293457, -0.07060599327087402, -0.297637939453125]], ['RElbowYaw', [1.9849541187286377, 1.1642640829086304, 1.175002098083496, 0.63043212890625, 0.11961007118225098, 0.11961007118225098, 0.11961007118225098, 0.11654210090637207, 0.06898808479309082]], ['RElbowRoll', [1.5156340599060059, 1.4926238059997559, 1.5417118072509766, 1.563188076019287, 1.4634780883789062, 1.4634780883789062, 1.4634780883789062, 1.4634780883789062, 1.2180380821228027]], ['RWristYaw', [1.862234115600586, 1.784000039100647, 1.7701940536499023, 1.6735520362854004, 1.6980960369110107, 1.6965620517730713, 1.6965620517730713, 1.6965620517730713, 0.5936160087585449]], ['RHand', [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.6563999652862549]]]]
                    time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['HeadPitch', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['LShoulderPitch', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['LShoulderRoll', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['LElbowYaw', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['LElbowRoll', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['LWristYaw', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['LHand', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['RShoulderPitch', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['RShoulderRoll', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['RElbowYaw', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['RElbowRoll', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['RWristYaw', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]], ['RHand', [1.0, 1.5, 1.9, 2.9, 3.35, 4.35, 5.6499999999999995, 6.35, 7.35]]]]

        else:
            #self.participant_1.exp_name_phonetic = safe_input.safe_input("Press <ENTER> if name is pronounced well enough. Otherwise ***TYPE*** the name phonetically:\n", 'enter')
            if participant_x.exp_name_phonetic.strip() == '':
                pass
            else:
                robot_x.robot.tts.post.say(self.lines["first apology"][bot_index])
                joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.08893013000488281, 0.08893013000488281, 0.15029001235961914, 0.1088719367980957, 0.1088719367980957, 0.1088719367980957, -0.0015759468078613281, -0.0015759468078613281, -0.0015759468078613281, -0.0015759468078613281, -0.0015759468078613281]], ['HeadPitch', [0.5798101425170898, 0.5798101425170898, 0.10733795166015625, 0.1579599380493164, 0.1579599380493164, 0.1579599380493164, 0.018366098403930664, 0.018366098403930664, 0.018366098403930664, 0.018366098403930664, 0.018366098403930664]], ['LShoulderPitch', [0.6779861450195312, 0.6779861450195312, 0.8390560150146484, 0.9065520763397217, 0.9065520763397217, 0.8620660305023193, 0.8605320453643799, 0.8605320453643799, 0.8237161636352539, 0.8237161636352539, 0.8421239852905273]], ['LShoulderRoll', [-0.3083760738372803, -0.3068418502807617, -0.018450021743774414, 0.1257460117340088, 0.12727999687194824, 0.21625208854675293, 0.2852821350097656, 0.28374814987182617, -0.03685808181762695, -0.0353238582611084, 0.07359004020690918]], ['LElbowYaw', [-1.2609901428222656, -1.2609901428222656, -1.1336679458618164, -1.0094141960144043, -1.0094141960144043, -1.5386438369750977, -1.5478482246398926, -1.5478482246398926, -1.3146800994873047, -1.3146800994873047, -0.4587080478668213]], ['LElbowRoll', [-1.553900122642517, -1.553900122642517, -0.8160459995269775, -0.800706148147583, -0.800706148147583, -0.8543961048126221, -0.857464075088501, -0.8559300899505615, -0.6657140254974365, -0.6657140254974365, -0.7669579982757568]], ['LWristYaw', [-0.6213119029998779, -0.6197779178619385, -0.6335840225219727, -0.33138608932495117, -0.33138608932495117, -1.1183280944824219, -1.0907158851623535, -1.089181900024414, -0.5538160800933838, -0.5538160800933838, -0.2516179084777832]], ['LHand', [0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702]], ['RShoulderPitch', [0.604438066482544, 0.604438066482544, 0.8023240566253662, 0.8575479984283447, 0.8575479984283447, 0.995607852935791, 0.9986758232116699, 0.9971418380737305, 0.7854499816894531, 0.7854499816894531, 0.8989658355712891]], ['RShoulderRoll', [0.30062198638916016, 0.30062198638916016, 0.23772811889648438, -0.047595977783203125, -0.04606199264526367, -0.27002596855163574, -0.27309393882751465, -0.2715599536895752, -0.18565607070922852, -0.1764519214630127, -0.16571402549743652]], ['RElbowYaw', [1.0660879611968994, 1.0660879611968994, 1.1182441711425781, 0.8789401054382324, 0.8789401054382324, 0.8482601642608643, 0.8482601642608643, 0.8482601642608643, 1.142788052558899, 1.142788052558899, 0.7347440719604492]], ['RElbowRoll', [1.5355758666992188, 1.5340418815612793, 1.1842899322509766, 1.2349119186401367, 1.2333779335021973, 1.1305999755859375, 1.1305999755859375, 1.1305999755859375, 1.0063457489013672, 0.995607852935791, 0.9189081192016602]], ['RWristYaw', [1.2593721151351929, 1.2593721151351929, 1.2578380107879639, 0.9771161079406738, 0.9771161079406738, 0.9725141525268555, 0.9725141525268555, 0.9725141525268555, 1.4311801195144653, 1.4311801195144653, 0.6902580261230469]], ['RHand', [0.2, 0.2, 0.2, 0.2, 0.6563999652862549, 0.2, 0.2, 0.6563999652862549, 0.2, 0.2, 0.2]]]]
                time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['HeadPitch', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['LShoulderPitch', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['LShoulderRoll', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['LElbowYaw', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['LElbowRoll', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['LWristYaw', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['LHand', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['RShoulderPitch', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['RShoulderRoll', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['RElbowYaw', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['RElbowRoll', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['RWristYaw', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]], ['RHand', [1.0, 2.17, 2.67, 3.17, 4.17, 5.17, 5.57, 6.57, 7.17, 7.77, 8.77]]]]

                # self.participant_1.exp_name_phonetic = safe_input.safe_input("Press <ENTER> if name is pronounced well enough. Otherwise ***TYPE*** the name phonetically:\n", 'enter')
                if self.participant_1.exp_name_phonetic.strip() == '':
                    pass
                else:
                    # added this morning, need to test/check
                    self.robot_1.robot.tts.post.say("How about: {}?".format(participant_x.exp_name_phonetic))
                    joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.08432793617248535, 0.08432793617248535, 0.08432793617248535]], ['HeadPitch', [0.029103994369506836, 0.029103994369506836, 0.029103994369506836]], ['LShoulderPitch', [0.9633100032806396, 0.9648439884185791, 0.9985921382904053]], ['LShoulderRoll', [0.24539804458618164, 0.2438640594482422, 0.2990880012512207]], ['LElbowYaw', [-0.6397199630737305, -0.638185977935791, -0.6765360832214355]], ['LElbowRoll', [-1.4342480897903442, -1.4342480897903442, -1.1489241123199463]], ['LWristYaw', [-1.7856178283691406, -1.773345947265625, -1.6859078407287598]], ['LHand', [0.6863999962806702, 0.6863999962806702, 0.6863999962806702]], ['RShoulderPitch', [0.8728880882263184, 0.8728880882263184, 0.8728880882263184]], ['RShoulderRoll', [-0.2086658477783203, -0.2086658477783203, -0.2086658477783203]], ['RElbowYaw', [0.42180800437927246, 0.42180800437927246, 0.42180800437927246]], ['RElbowRoll', [1.0170841217041016, 1.0170841217041016, 1.0170841217041016]], ['RWristYaw', [0.6196939945220947, 0.6196939945220947, 0.6196939945220947]], ['RHand', [0.2, 0.2, 0.2]]]]
                    time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.81, 1.81, 2.21]], ['HeadPitch', [0.81, 1.81, 2.21]], ['LShoulderPitch', [0.81, 1.81, 2.21]], ['LShoulderRoll', [0.81, 1.81, 2.21]], ['LElbowYaw', [0.81, 1.81, 2.21]], ['LElbowRoll', [0.81, 1.81, 2.21]], ['LWristYaw', [0.81, 1.81, 2.21]], ['LHand', [0.81, 1.81, 2.21]], ['RShoulderPitch', [0.81, 1.81, 2.21]], ['RShoulderRoll', [0.81, 1.81, 2.21]], ['RElbowYaw', [0.81, 1.81, 2.21]], ['RElbowRoll', [0.81, 1.81, 2.21]], ['RWristYaw', [0.81, 1.81, 2.21]], ['RHand', [0.81, 1.81, 2.21]]]]

                    # confirmation = safe_input.safe_input("Press <ENTER> if good enough or <b> for 'bad':\n", 'enter')
                    confirmation = 'b'  # XXXX Placeholder for actual confirmation

                    if confirmation == 'b':
                        robot_x.robot.tts.post.say(self.lines["final apology"][bot_index])
                        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.0015759468078613281]], ['HeadPitch', [0.018366098403930664]], ['LShoulderPitch', [0.8421239852905273]], ['LShoulderRoll', [0.07205605506896973]], ['LElbowYaw', [-0.4587080478668213]], ['LElbowRoll', [-0.7669579982757568]], ['LWristYaw', [-0.25315189361572266]], ['LHand', [0.6863999962806702]], ['RShoulderPitch', [0.8345379829406738]], ['RShoulderRoll', [-0.17184996604919434]], ['RElbowYaw', [0.36351609230041504]], ['RElbowRoll', [0.9219760894775391]], ['RWristYaw', [0.4540219306945801]], ['RHand', [0.2]]]]
                        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [7.32]], ['HeadPitch', [7.32]], ['LShoulderPitch', [7.32]], ['LShoulderRoll', [7.32]], ['LElbowYaw', [7.32]], ['LElbowRoll', [7.32]], ['LWristYaw', [7.32]], ['LHand', [7.32]], ['RShoulderPitch', [7.32]], ['RShoulderRoll', [7.32]], ['RElbowYaw', [7.32]], ['RElbowRoll', [7.32]], ['RWristYaw', [7.32]], ['RHand', [7.32]]]]

                    else:
                        pass                

            if participant_x.exp_name_phonetic.strip() == '':
                pass
            else:
                participant_x.exp_name = participant_x.exp_name_phonetic

        if robot_x.team_condition == 'O':
            player_type = "one of our opponents"
        elif robot_x.team_condition == 'P':
            player_type = "my partner"
        else:
            raise ValueError("Unexpected team condition")
        
        robot_x.robot.tts.post.say("\\rspd=85\\ If I am not mistaken, you, {}, are {} in the game today.".format(participant_x.exp_name, player_type)) 
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.018366098403930664, 0.018366098403930664, 0.06898808479309082, 0.06898808479309082, 0.06898808479309082, 0.06898808479309082, 0.06898808479309082, 0.06898808479309082]], ['HeadPitch', [0.13955211639404297, 0.13955211639404297, -0.03225588798522949, -0.03225588798522949, -0.03225588798522949, -0.03225588798522949, -0.03225588798522949, -0.03225588798522949]], ['LShoulderPitch', [0.8467259407043457, 0.8467259407043457, 0.8436579704284668, 0.8436579704284668, 0.8436579704284668, 0.8436579704284668, 0.8436579704284668, 0.8451919555664062]], ['LShoulderRoll', [0.027570009231567383, 0.02603602409362793, 0.02143406867980957, 0.02143406867980957, 0.02143406867980957, 0.02143406867980957, 0.01683211326599121, 0.019900083541870117]], ['LElbowYaw', [-0.5292720794677734, -0.5354080200195312, -0.527738094329834, -0.527738094329834, -0.5308060646057129, -0.5308060646057129, -0.5292720794677734, -0.5292720794677734]], ['LElbowRoll', [-0.6963939666748047, -0.6963939666748047, -0.6963939666748047, -0.6963939666748047, -0.6963939666748047, -0.6963939666748047, -0.6963939666748047, -0.6963939666748047]], ['LWristYaw', [-0.1595778465270996, -0.1595778465270996, -0.7240900993347168, -0.7240900993347168, -0.7256240844726562, -0.7240900993347168, -0.7302260398864746, -0.7302260398864746]], ['LHand', [0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702, 0.6863999962806702]], ['RShoulderPitch', [0.8007900714874268, 0.7378959655761719, 0.5169999599456787, 0.5200679302215576, 0.5200679302215576, 0.5216019153594971, 0.38507604598999023, 0.5906319618225098]], ['RShoulderRoll', [-0.14577198028564453, -0.12276196479797363, 0.1058039665222168, 0.10426998138427734, -0.22400593757629395, -0.21786999702453613, -0.26695799827575684, -0.16724801063537598]], ['RElbowYaw', [0.6549761295318604, 0.7132680416107178, 1.5262880325317383, 1.5262880325317383, 1.518618106842041, 1.5170841217041016, -0.16724801063537598, -0.14117002487182617]], ['RElbowRoll', [1.4312639236450195, 1.3177480697631836, 0.317579984664917, 0.317579984664917, 0.3758718967437744, 0.3758718967437744, 0.7977218627929688, 0.8820919990539551]], ['RWristYaw', [1.2271580696105957, 1.2271580696105957, 1.3590821027755737, 1.3590821027755737, 1.363684058189392, 1.363684058189392, 1.1857401132583618, 1.1842060089111328]], ['RHand', [0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['HeadPitch', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['LShoulderPitch', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['LShoulderRoll', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['LElbowYaw', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['LElbowRoll', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['LWristYaw', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['LHand', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['RShoulderPitch', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['RShoulderRoll', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['RElbowYaw', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['RElbowRoll', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['RWristYaw', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]], ['RHand', [1.0, 1.21, 2.11, 2.61, 3.61, 4.609999999999999, 5.109999999999999, 6.109999999999999]]]]

        #exp_names = self.participant_1.exp_name + "\n" + self.participant_2.exp_name
        #files.save_file(exp_names_path, exp_names)

    def intro_handshake(self, robot_x, participant_x):

        bot_index, bot_num = self.get_index_num(robot_x)

        # hand shake flipping variables
        if robot_x.robot.name == "class act":
            script_name = "EXPERIMENT/PASSWORD_1/MODULE/shake_hand_terminal_clas.py"
            #handshook_path = handshook_path_clas

        elif robot_x.robot.name == "metal head":
            script_name = "EXPERIMENT/PASSWORD_1/MODULE/shake_hand_terminal_meta.py"
            #handshook_path = handshook_path_meta

        else:
            print("ERROR: something screwy with robot names.")

        time.sleep(0.3)
        robot_x.robot.tts.post.say(self.lines["an honor to shake your hand"][bot_index])

        # # Command to open a new terminal and execute the script with variables
        # command = 'start cmd.exe /k python "{}" "{}" "{}"'.format(script_name, team_condition, self.participant_x.exp_name)

        # # Execute the command

        # handshake_method = os.system(command)
        # message = "Opened hand shake terminal."

        # waiting.await_update(handshook_path, handshake_method, message)

        # robot_x.robot.sit_gently()
        robot_x.robot.tts.say(self.lines["looking forward"][bot_index])

        ########################## PROCEED FROM HERE WITH DIALOGUE COMPRESSION ##############
        
        self.robot_1.robot.tts.post.say("So, {}, lets get to know each other a little bit.".format(self.participant_1.exp_name))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.027653932571411133, -4.1961669921875e-05, -0.0031099319458007812, -0.0031099319458007812, -0.0031099319458007812, -0.029187917709350586, -0.029187917709350586, -4.1961669921875e-05]], ['HeadPitch', [0.09660005569458008, 0.23926210403442383, 0.15029001235961914, 0.15029001235961914, 0.15029001235961914, 0.052114009857177734, 0.052114009857177734, 0.17636799812316895]], ['LShoulderPitch', [0.9341640472412109, 0.9341640472412109, 0.9080860614776611, 0.9218921661376953, 0.9218921661376953, 0.9280281066894531, 0.9280281066894531, 0.9264941215515137]], ['LShoulderRoll', [0.2607381343841553, 0.2592041492462158, 0.16716408729553223, 0.20858192443847656, 0.2070479393005371, 0.2668740749359131, 0.26534008979797363, 0.2822141647338867]], ['LElbowYaw', [-0.5001258850097656, -0.49859189987182617, -0.5001258850097656, -0.4970579147338867, -0.4970579147338867, -0.447969913482666, -0.44643592834472656, -0.46637797355651855]], ['LElbowRoll', [-1.1075060367584229, -1.1167101860046387, -1.3437421321868896, -1.3606160879135132, -1.3468101024627686, -1.221022129058838, -1.221022129058838, -1.162730097770691]], ['LWristYaw', [0.06745409965515137, 0.06745409965515137, -1.472681999206543, -1.529439926147461, -1.5325078964233398, -1.242581844329834, -1.242581844329834, -0.6335840225219727]], ['LHand', [0.597599983215332, 0.597599983215332, 0.597599983215332, 0.597599983215332, 0.597599983215332, 0.597599983215332, 0.597599983215332, 0.5971999764442444]], ['RShoulderPitch', [0.8314700126647949, 0.8053920269012451, 0.9342479705810547, 0.9327139854431152, 0.9327139854431152, 0.8437418937683105, 0.8437418937683105, 0.8468098640441895]], ['RShoulderRoll', [-0.1825878620147705, -0.12582993507385254, -0.16111207008361816, -0.1595778465270996, -0.16264605522155762, -0.03072190284729004, -0.03072190284729004, -0.0844118595123291]], ['RElbowYaw', [0.720937967300415, 0.7961039543151855, 1.3238000869750977, 1.0001261234283447, 1.0001261234283447, 1.1167101860046387, 1.1167101860046387, 0.460158109664917]], ['RElbowRoll', [0.9587922096252441, 0.9342479705810547, 1.07230806350708, 1.3208160400390625, 1.2886018753051758, 0.8191978931427002, 0.8191978931427002, 0.8130619525909424]], ['RWristYaw', [1.668950080871582, 1.3621500730514526, 1.7901360988616943, 1.4925401210784912, 1.4940741062164307, 1.6045221090316772, 1.5815120935440063, 0.3190300464630127]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['HeadPitch', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['LShoulderPitch', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['LShoulderRoll', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['LElbowYaw', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['LElbowRoll', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['LWristYaw', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['LHand', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['RShoulderPitch', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['RShoulderRoll', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['RElbowYaw', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['RElbowRoll', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['RWristYaw', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]], ['RHand', [1.11, 1.71, 2.71, 3.11, 3.51, 4.109999999999999, 4.709999999999999, 5.709999999999999]]]]

        self.robot_1.robot.tts.post.say("{} and I are from Frantsi pani fornia.  Where are you from?".format(self.robot_1.robot.exp_name))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.0015759468078613281, -0.1565098762512207, -0.08901405334472656, -0.08594608306884766, -0.08594608306884766, -0.02611994743347168, -0.02611994743347168, 0.02603602409362793]], ['HeadPitch', [0.06438612937927246, 0.16409611701965332, 0.11040592193603516, 0.0827939510345459, -0.08901405334472656, 0.1349501609802246, 0.1349501609802246, 0.2039799690246582]], ['RShoulderPitch', [0.925044059753418, 0.9311800003051758, 0.9679961204528809, 0.9864039421081543, 0.9910058975219727, 0.9465198516845703, 0.9465198516845703, 0.9465198516845703]], ['RShoulderRoll', [0.7532360553741455, 0.7593719959259033, 0.23321008682250977, 0.24394798278808594, 0.25008392333984375, 0.3237159252166748, 0.3237159252166748, 0.3206479549407959]], ['RElbowYaw', [-0.9909219741821289, -0.9909219741821289, -1.2148860692977905, -1.21642005443573, -1.2148860692977905, -0.47089600563049316, -0.47089600563049316, -0.47089600563049316]], ['RElbowRoll', [-1.2165040969848633, -1.208834171295166, -1.2579221725463867, -1.3008737564086914, -1.3100781440734863, -1.2103681564331055, -1.2103681564331055, -1.2134361267089844]], ['RWristYaw', [1.8561820983886719, 1.8561820983886719, -0.9249601364135742, -0.9249601364135742, -0.9249601364135742, -0.9249601364135742, -0.9249601364135742, -0.9249601364135742]], ['RHand', [0.6771999597549438, 0.6776000261306763, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]], ['LShoulderPitch', [0.8682019710540771, 0.8682019710540771, 0.9970581531524658, 0.9970581531524658, 0.9970581531524658, 0.8850760459899902, 0.8835420608520508, 0.9096200466156006]], ['LShoulderRoll', [-0.09046411514282227, -0.09506607055664062, -0.21778607368469238, -0.21778607368469238, -0.21625208854675293, -0.03063797950744629, -0.029103994369506836, -0.21318411827087402]], ['LElbowYaw', [0.357464075088501, 0.3559298515319824, 0.9710640907287598, 0.9710640907287598, 0.9710640907287598, 1.2778639793395996, 1.2778639793395996, 0.49552392959594727]], ['LElbowRoll', [1.5661721229553223, 1.5646381378173828, 1.5324240922927856, 1.537026047706604, 1.537026047706604, 1.1182441711425781, 1.1305160522460938, 1.047680139541626]], ['LWristYaw', [1.0017437934875488, 1.0017437934875488, 1.8454442024230957, 1.8454442024230957, 1.8454442024230957, 1.3269519805908203, 1.3284859657287598, 0.8544800281524658]], ['LHand', [0.597599983215332, 0.597599983215332, 0.5971999764442444, 0.597599983215332, 0.597599983215332, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['HeadPitch', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['LShoulderPitch', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['LShoulderRoll', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['LElbowYaw', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['LElbowRoll', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['LWristYaw', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['LHand', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['RShoulderPitch', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['RShoulderRoll', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['RElbowYaw', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['RElbowRoll', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['RWristYaw', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]], ['RHand', [1.02, 1.42, 2.42, 2.82, 3.2199999999999998, 3.92, 4.47, 5.47]]]]

        # if self.sr:
        #     self.participant_1_place = lstn.listen(self.robot_1.robot, 5).lower()
        # else:
        #     self.participant_1_place = safe_input.safe_input("***TYPE*** participant's declared place of origin.\n", 'enter', True).lower()
        print(self.participant_1_place)

        if "brisbane" in self.participant_1_place or "australia" in self.participant_1_place:

            self.robot_1.robot.tts.post.say("Nice. I hope I can escape this dundge atory some day and see something of {}".format(self.participant_1_place))
            joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.05824995040893555, 0.056715965270996094, 0.05518198013305664, 0.05518198013305664, 0.1487560272216797, 0.3880600929260254, -0.08287787437438965, 0.059783935546875, 0.04904603958129883]], ['HeadPitch', [-0.12582993507385254, 0.42180800437927246, 0.19324207305908203, 0.19324207305908203, 0.042910099029541016, 0.03984212875366211, 0.11500811576843262, 0.11500811576843262, 0.14568805694580078]], ['LShoulderPitch', [0.9096200466156006, 0.9096200466156006, 0.9080860614776611, 0.9080860614776611, 0.914222002029419, 0.9096200466156006, 0.9172899723052979, 0.9157559871673584, 0.9080860614776611]], ['LShoulderRoll', [0.21471810340881348, 0.21471810340881348, 0.21471810340881348, 0.21471810340881348, 0.21471810340881348, 0.21318411827087402, 0.2208540439605713, 0.21932005882263184, 0.21318411827087402]], ['LElbowYaw', [-0.47251391410827637, -0.4740478992462158, -0.4740478992462158, -0.4740478992462158, -0.48325204849243164, -0.48018407821655273, -0.4817180633544922, -0.48018407821655273, -0.4786500930786133]], ['LElbowRoll', [-1.0323400497436523, -1.0400099754333496, -1.0384759902954102, -1.0384759902954102, -1.0338740348815918, -1.044612169265747, -1.0522820949554443, -1.0507481098175049, -1.0430779457092285]], ['LWristYaw', [-0.11355805397033691, -0.11355805397033691, -0.11355805397033691, -0.11355805397033691, -0.11355805397033691, -0.11355805397033691, -0.6489238739013672, -0.6489238739013672, -0.6489238739013672]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733]], ['RShoulderPitch', [0.9189081192016602, 0.9204421043395996, 0.8529460430145264, 0.8529460430145264, 0.11355805397033691, 0.17184996604919434, 0.10895586013793945, 0.14117002487182617, 1.018618106842041]], ['RShoulderRoll', [-0.28690004348754883, -0.27616190910339355, -0.15497589111328125, -0.15497589111328125, -0.09975194931030273, 0.17176604270935059, -0.2915019989013672, -0.2485499382019043, -0.38507604598999023]], ['RElbowYaw', [0.4724299907684326, 0.46169209480285645, 0.2592041492462158, 0.2592041492462158, 0.91115403175354, 0.9126880168914795, 0.8267841339111328, 0.8267841339111328, 0.5598680973052979]], ['RElbowRoll', [1.1106581687927246, 1.129065990447998, 1.458876132965088, 1.458876132965088, 1.5585861206054688, 1.5570521354675293, 1.5585861206054688, 1.5585861206054688, 1.3177480697631836]], ['RWristYaw', [1.6398041248321533, 1.2378960847854614, 1.2394300699234009, 1.2394300699234009, 0.05824995040893555, 0.05824995040893555, 0.3481760025024414, 0.33743810653686523, 0.42180800437927246]], ['RHand', [0.6771999597549438, 0.6776000261306763, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
            time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['HeadPitch', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['LShoulderPitch', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['LShoulderRoll', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['LElbowYaw', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['LElbowRoll', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['LWristYaw', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['LHand', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['RShoulderPitch', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['RShoulderRoll', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['RElbowYaw', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['RElbowRoll', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['RWristYaw', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]], ['RHand', [0.35, 0.7, 1.7, 2.9, 3.71, 4.11, 4.61, 5.11, 6.3100000000000005]]]]

        else:    

            self.robot_1.robot.tts.post.say("{}, ah, that must be a nice place to live".format(self.participant_1_place))
            joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.08287787437438965, -0.0813438892364502, -0.047595977783203125, -0.05066394805908203, -0.03992605209350586]], ['HeadPitch', [0.05058002471923828, 0.05058002471923828, 0.26534008979797363, 0.11347413063049316, 0.2239220142364502]], ['LShoulderPitch', [0.5015759468078613, 0.5061781406402588, 0.8022401332855225, 0.8022401332855225, 0.6887240409851074]], ['LShoulderRoll', [0.27761197090148926, 0.27761197090148926, -0.11509203910827637, -0.11355805397033691, 0.23159193992614746]], ['LElbowYaw', [-1.2471837997436523, -1.2471837997436523, -0.7639739513397217, -0.7639739513397217, -0.03992605209350586]], ['LElbowRoll', [-0.5261199474334717, -0.5261199474334717, -0.3742539882659912, -0.37272000312805176, -1.007796049118042]], ['LWristYaw', [-1.6859078407287598, -1.6859078407287598, -1.7626080513000488, -1.7626080513000488, -0.9342479705810547]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733]], ['RShoulderPitch', [0.7777800559997559, 0.7793140411376953, 0.8145959377288818, 0.8099939823150635, 0.8912959098815918]], ['RShoulderRoll', [-0.2025299072265625, -0.2025299072265625, -0.08901405334472656, -0.21480202674865723, -0.2286078929901123]], ['RElbowYaw', [2.1046061515808105, 2.1046061515808105, 0.7654240131378174, 0.720937967300415, 0.440216064453125]], ['RElbowRoll', [0.8790240287780762, 0.8774900436401367, 1.1336679458618164, 1.1582121849060059, 1.0646381378173828]], ['RWristYaw', [1.0338740348815918, 1.0338740348815918, 0.9939899444580078, 0.9939899444580078, 0.9449019432067871]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
            time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['HeadPitch', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['LShoulderPitch', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['LShoulderRoll', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['LElbowYaw', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['LElbowRoll', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['LWristYaw', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['LHand', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['RShoulderPitch', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['RShoulderRoll', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['RElbowYaw', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['RElbowRoll', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['RWristYaw', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]], ['RHand', [1.0, 1.9, 2.9, 3.41, 4.8100000000000005]]]]

        self.robot_1.robot.tts.post.say("And what is one of your favorite hobbies, {}".format(self.participant_1.exp_name))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.042994022369384766, -0.042994022369384766, -0.09668397903442383, -0.09668397903442383, -0.042994022369384766, -0.042994022369384766]], ['HeadPitch', [0.1349501609802246, 0.1349501609802246, 0.04904603958129883, 0.04904603958129883, 0.19477605819702148, 0.2852821350097656]], ['LShoulderPitch', [0.5046441555023193, 0.5092461109161377, 0.5982179641723633, 0.647305965423584, 0.9556400775909424, 0.9571740627288818]], ['LShoulderRoll', [0.0827939510345459, 0.08125996589660645, 0.2561359405517578, 0.25, 0.34357404708862305, 0.25153398513793945]], ['LElbowYaw', [-0.3866100311279297, -0.3866100311279297, -0.7869839668273926, -0.6596620082855225, -0.7440319061279297, -0.6412539482116699]], ['LElbowRoll', [-0.440216064453125, -0.44175004959106445, -1.1719341278076172, -1.3222661018371582, -1.1059720516204834, -1.0983021259307861]], ['LWristYaw', [-1.7442002296447754, -1.7748799324035645, -1.7672100067138672, -1.7073841094970703, -1.7825498580932617, -0.6918759346008301]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733]], ['RShoulderPitch', [0.9741320610046387, 0.9741320610046387, 0.9772000312805176, 0.9772000312805176, 0.978734016418457, 0.978734016418457]], ['RShoulderRoll', [-0.3958139419555664, -0.3958139419555664, -0.3866100311279297, -0.3866100311279297, -0.38507604598999023, -0.38200807571411133]], ['RElbowYaw', [0.44175004959106445, 0.44175004959106445, 0.45095396041870117, 0.45095396041870117, 0.47089600563049316, 0.47396397590637207]], ['RElbowRoll', [1.3407578468322754, 1.3376898765563965, 1.319282054901123, 1.319282054901123, 1.3039422035217285, 1.2947378158569336]], ['RWristYaw', [0.6856560707092285, 0.6856560707092285, 0.6856560707092285, 0.6856560707092285, 0.6856560707092285, 0.6856560707092285]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6776000261306763, 0.6776000261306763, 0.6776000261306763, 0.6776000261306763]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['HeadPitch', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['LShoulderPitch', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['LShoulderRoll', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['LElbowYaw', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['LElbowRoll', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['LWristYaw', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['LHand', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['RShoulderPitch', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['RShoulderRoll', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['RElbowYaw', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['RElbowRoll', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['RWristYaw', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]], ['RHand', [1.0, 1.7, 2.2, 2.6, 3.6, 4.6]]]]

        # if self.sr:
        #     self.participant_1_hobby_pre = lstn.listen(self.robot_1.robot, 5)
        # else:
        #     self.participant_1_hobby_pre = safe_input.safe_input("***TYPE*** participant's declared hobby starting with VERB+ing.\n", 'enter', True)

        # self.participant_1_hobby_your = replace_my_our_with_your(self.participant_1_hobby_pre)
        # self.participant_1_hobby = replace_my_our_with_nil(self.participant_1_hobby_pre)

        self.robot_1.robot.tts.post.say("Cool: {} is very cool.".format(self.participant_1_hobby_your))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.042994022369384766, -0.03992605209350586, -0.03992605209350586, -0.024585962295532227, -0.009245872497558594, 0.019900083541870117, -0.02611994743347168, -0.0015759468078613281]], ['HeadPitch', [0.0060939788818359375, 0.2822141647338867, 0.2822141647338867, 0.07972598075866699, 0.1288139820098877, -0.056799888610839844, 0.31442809104919434, 0.2469320297241211]], ['LShoulderPitch', [0.6488399505615234, 0.6534421443939209, 0.6519081592559814, 0.6519081592559814, 0.6534421443939209, 0.6549761295318604, 0.6549761295318604, 0.7516181468963623]], ['LShoulderRoll', [0.038308143615722656, 0.03063797950744629, 0.03063797950744629, 0.03217196464538574, 0.052114009857177734, 0.05058002471923828, 0.052114009857177734, 0.18864011764526367]], ['LElbowYaw', [0.06898808479309082, 0.056715965270996094, 0.05518198013305664, 0.05518198013305664, 0.06592011451721191, 0.05364799499511719, 0.05364799499511719, -0.18105387687683105]], ['LElbowRoll', [-0.6365680694580078, -0.6365680694580078, -0.6365680694580078, -0.6365680694580078, -0.6703159809112549, -0.6687819957733154, -0.6687819957733154, -0.9372320175170898]], ['LWristYaw', [-1.5969362258911133, -1.5969362258911133, -1.5969362258911133, -1.5969362258911133, -0.658128023147583, -0.658128023147583, -0.6565940380096436, -0.5906319618225098]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733, 0.6471999883651733]], ['RShoulderPitch', [0.751702070236206, 0.8774900436401367, 0.8774900436401367, 0.8790240287780762, 0.8606162071228027, 0.8560140132904053, 0.8606162071228027, 0.8958978652954102]], ['RShoulderRoll', [-0.12582993507385254, -0.12582993507385254, -0.12582993507385254, -0.12122797966003418, -0.1503739356994629, -0.15190792083740234, -0.1534419059753418, -0.23781204223632812]], ['RElbowYaw', [0.797637939453125, 0.8804740905761719, 0.8804740905761719, 0.8712701797485352, 0.43561410903930664, 0.4264099597930908, 0.4264099597930908, 0.4371480941772461]], ['RElbowRoll', [0.7977218627929688, 1.0293560028076172, 1.0262880325317383, 1.0140161514282227, 0.9281120300292969, 0.9281120300292969, 0.9296460151672363, 1.075376033782959]], ['RWristYaw', [1.3406740427017212, 1.3391400575637817, 1.3391400575637817, 1.3406740427017212, 0.516916036605835, 0.516916036605835, 0.5153820514678955, 0.5936160087585449]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['HeadPitch', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['LShoulderPitch', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['LShoulderRoll', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['LElbowYaw', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['LElbowRoll', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['LWristYaw', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['LHand', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['RShoulderPitch', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['RShoulderRoll', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['RElbowYaw', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['RElbowRoll', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['RWristYaw', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]], ['RHand', [0.5, 1.0, 1.4, 1.7, 2.7, 2.95, 3.2, 4.2]]]]

        self.robot_2.robot.tts.post.say("And what about you, {}.  What is a hobby of yours?".format(self.participant_2.exp_name)) 
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.007711887359619141, -0.007711887359619141, -0.007711887359619141, -0.007711887359619141, 0.03217196464538574, 0.0367741584777832, 0.0367741584777832]], ['HeadPitch', [0.06745409965515137, 0.06745409965515137, 0.06745409965515137, 0.06745409965515137, 0.23159193992614746, 0.13955211639404297, 0.13955211639404297]], ['LShoulderPitch', [0.780764102935791, 0.7899680137634277, 0.7899680137634277, 0.7945699691772461, 0.800706148147583, 0.8022401332855225, 0.8022401332855225]], ['LShoulderRoll', [0.18557214736938477, 0.17176604270935059, 0.17176604270935059, 0.17176604270935059, 0.1748340129852295, 0.1748340129852295, 0.1748340129852295]], ['LElbowYaw', [-0.23627805709838867, -0.27616190910339355, -0.277695894241333, -0.2853660583496094, -0.29917192459106445, -0.29917192459106445, -0.29917192459106445]], ['LElbowRoll', [-0.9295620918273926, -0.9280281066894531, -0.9264941215515137, -0.9280281066894531, -0.931096076965332, -0.9280281066894531, -0.9280281066894531]], ['LWristYaw', [-0.5890979766845703, -0.5906319618225098, -0.5906319618225098, -0.5906319618225098, -0.5906319618225098, -0.5890979766845703, -0.5906319618225098]], ['LHand', [0.6471999883651733, 0.6467999815940857, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6467999815940857]], ['RShoulderPitch', [0.07980990409851074, 0.4525718688964844, 0.4648439884185791, 0.771643877029419, 0.7777800559997559, 0.7777800559997559, 0.7793140411376953]], ['RShoulderRoll', [-0.20713186264038086, -0.052197933197021484, -0.047595977783203125, 0.019900083541870117, -0.29303598403930664, -0.2884340286254883, -0.2884340286254883]], ['RElbowYaw', [1.4127720594406128, 1.2271580696105957, 1.2332940101623535, 0.7746281623840332, 0.21471810340881348, 0.21318411827087402, 0.21471810340881348]], ['RElbowRoll', [1.4987602233886719, 0.5921659469604492, 0.5890979766845703, 0.8314700126647949, 1.0937838554382324, 1.0799779891967773, 1.0799779891967773]], ['RWristYaw', [1.5999200344085693, 1.6014540195465088, 1.6014540195465088, 1.5937840938568115, 1.4204421043395996, 1.4204421043395996, 1.4204421043395996]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['HeadPitch', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['LShoulderPitch', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['LShoulderRoll', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['LElbowYaw', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['LElbowRoll', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['LWristYaw', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['LHand', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['RShoulderPitch', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['RShoulderRoll', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['RElbowYaw', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['RElbowRoll', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['RWristYaw', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]], ['RHand', [0.74, 1.84, 2.64, 3.24, 3.8400000000000003, 4.34, 4.9399999999999995]]]]

        # if self.sr:
        #     self.participant_2_hobby_pre = lstn.listen(self.robot_2.robot, 5)
        # else:
        #     self.participant_2_hobby_pre = safe_input.safe_input("***TYPE*** participant's declared hobby starting with VERB+ing.\n", 'enter', True)


        # self.participant_2_hobby_your = replace_my_our_with_your(self.participant_2_hobby_pre)
        # self.participant_2_hobby = replace_my_our_with_nil(self.participant_2_hobby_pre)

        # # Save the hobbies to a .txt file
        # with open(hobbies_file, "w") as f:
        #     f.write(self.robot_1.robot.team_condition + "\n")
        #     f.write(self.participant_1_hobby + "\n")
        #     f.write(self.participant_2_hobby + "\n")

        # # Function to run the subprocess
        # def run_opinionation_script():
        #     subprocess.call([python3_path, opinionation_path])

        # # Start the subprocess in a background thread
        # opinion_thread = threading.Thread(target=run_opinionation_script)
        # opinion_thread.start()

        self.robot_2.robot.tts.post.say("{} sounds like a lot of fun.".format(self.participant_2_hobby_your))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.018450021743774414, -0.018450021743774414, 0.08125996589660645, 0.08125996589660645, 0.019900083541870117]], ['HeadPitch', [0.19937801361083984, 0.19937801361083984, 0.14262008666992188, 0.14262008666992188, 0.22545599937438965]], ['LShoulderPitch', [0.8114440441131592, 0.8114440441131592, 0.8160459995269775, 0.8160459995269775, 0.857464075088501]], ['LShoulderRoll', [0.17176604270935059, 0.17176604270935059, 0.17176604270935059, 0.17176604270935059, 0.14568805694580078]], ['LElbowYaw', [-0.3237159252166748, -0.3237159252166748, -0.32524991035461426, -0.32524991035461426, -0.36820197105407715]], ['LElbowRoll', [-0.9280281066894531, -0.9280281066894531, -0.9280281066894531, -0.9280281066894531, -1.0522820949554443]], ['LWristYaw', [-0.5906319618225098, -0.5906319618225098, -0.5906319618225098, -0.5906319618225098, -1.2410478591918945]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733]], ['RShoulderPitch', [0.8498780727386475, 0.8498780727386475, 0.8514120578765869, 0.8514120578765869, 0.902033805847168]], ['RShoulderRoll', [-0.16418004035949707, -0.16418004035949707, -0.20406389236450195, -0.20406389236450195, -0.25621986389160156]], ['RElbowYaw', [0.3650500774383545, 0.3650500774383545, 0.37272000312805176, 0.37272000312805176, 0.4340801239013672]], ['RElbowRoll', [1.0845799446105957, 1.0861139297485352, 1.0109481811523438, 1.0109481811523438, 1.1014537811279297]], ['RWristYaw', [1.2961881160736084, 1.2961881160736084, 0.7546861171722412, 0.7546861171722412, 0.7577540874481201]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 1.76, 2.26, 2.76, 3.76]], ['HeadPitch', [1.0, 1.76, 2.26, 2.76, 3.76]], ['LShoulderPitch', [1.0, 1.76, 2.26, 2.76, 3.76]], ['LShoulderRoll', [1.0, 1.76, 2.26, 2.76, 3.76]], ['LElbowYaw', [1.0, 1.76, 2.26, 2.76, 3.76]], ['LElbowRoll', [1.0, 1.76, 2.26, 2.76, 3.76]], ['LWristYaw', [1.0, 1.76, 2.26, 2.76, 3.76]], ['LHand', [1.0, 1.76, 2.26, 2.76, 3.76]], ['RShoulderPitch', [1.0, 1.76, 2.26, 2.76, 3.76]], ['RShoulderRoll', [1.0, 1.76, 2.26, 2.76, 3.76]], ['RElbowYaw', [1.0, 1.76, 2.26, 2.76, 3.76]], ['RElbowRoll', [1.0, 1.76, 2.26, 2.76, 3.76]], ['RWristYaw', [1.0, 1.76, 2.26, 2.76, 3.76]], ['RHand', [1.0, 1.76, 2.26, 2.76, 3.76]]]]

        self.robot_2.robot.tts.post.say("My hobby is catching flies, like this, see?")
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.02611994743347168, -0.02611994743347168, -0.024585962295532227, -0.023051977157592773, -0.024585962295532227]], ['HeadPitch', [0.1548919677734375, 0.1548919677734375, 0.042910099029541016, 0.042910099029541016, 0.042910099029541016]], ['LShoulderPitch', [0.9203581809997559, 0.9218921661376953, 0.9280281066894531, 0.9280281066894531, 1.0262041091918945]], ['LShoulderRoll', [0.2622721195220947, 0.2622721195220947, 0.27761197090148926, 0.2760779857635498, 0.2791459560394287]], ['LElbowYaw', [-0.46024203300476074, -0.46024203300476074, -0.4740478992462158, -0.47251391410827637, -0.9572582244873047]], ['LElbowRoll', [-1.1504580974578857, -1.1504580974578857, -1.1335840225219727, -1.1335840225219727, -1.0937001705169678]], ['LWristYaw', [-4.1961669921875e-05, -4.1961669921875e-05, -0.8728880882263184, -0.8744220733642578, -1.78715181350708]], ['LHand', [0.29399996995925903, 0.29399996995925903, 0.29399996995925903, 0.29399996995925903, 0.6247999668121338]], ['RShoulderPitch', [0.8145959377288818, 0.8130619525909424, 0.8176639080047607, 0.8176639080047607, 0.8560140132904053]], ['RShoulderRoll', [0.04597806930541992, 0.038308143615722656, 0.03984212875366211, 0.038308143615722656, 0.009161949157714844]], ['RElbowYaw', [0.3589141368865967, 0.36044812202453613, 0.6120240688323975, 0.6058881282806396, 1.1657980680465698]], ['RElbowRoll', [1.5002942085266113, 1.5018281936645508, 1.3070101737976074, 1.2947378158569336, 1.2717280387878418]], ['RWristYaw', [0.8728041648864746, 0.8728041648864746, 1.371354103088379, 1.371354103088379, 1.4879380464553833]], ['RHand', [0.30159997940063477, 0.30159997940063477, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 2.3, 3.05, 3.3, 4.3]], ['HeadPitch', [1.0, 2.3, 3.05, 3.3, 4.3]], ['LShoulderPitch', [1.0, 2.3, 3.05, 3.3, 4.3]], ['LShoulderRoll', [1.0, 2.3, 3.05, 3.3, 4.3]], ['LElbowYaw', [1.0, 2.3, 3.05, 3.3, 4.3]], ['LElbowRoll', [1.0, 2.3, 3.05, 3.3, 4.3]], ['LWristYaw', [1.0, 2.3, 3.05, 3.3, 4.3]], ['LHand', [1.0, 2.3, 3.05, 3.3, 4.3]], ['RShoulderPitch', [1.0, 2.3, 3.05, 3.3, 4.3]], ['RShoulderRoll', [1.0, 2.3, 3.05, 3.3, 4.3]], ['RElbowYaw', [1.0, 2.3, 3.05, 3.3, 4.3]], ['RElbowRoll', [1.0, 2.3, 3.05, 3.3, 4.3]], ['RWristYaw', [1.0, 2.3, 3.05, 3.3, 4.3]], ['RHand', [1.0, 2.3, 3.05, 3.3, 4.3]]]]

        # if hobby_animations == False:
        #     Robot.catch_fly = catch_fly.catch_fly
        #     self.robot_2.robot.catch_fly()
        # time.sleep(0.7)

        self.robot_1.robot.tts.post.say("{} is really athletic.  My hobby is playing puppets.  This is my latest routine.".format(self.robot_2.robot.exp_name))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.39573001861572266, 0.6319661140441895, 0.7500841617584229, -0.023051977157592773, -0.042994022369384766, -0.042994022369384766, 0.0030260086059570312, 0.0030260086059570312]], ['HeadPitch', [0.0858621597290039, 0.16716408729553223, 0.13034796714782715, 0.21778607368469238, 0.13801813125610352, 0.13955211639404297, 0.14568805694580078, 0.14568805694580078]], ['LShoulderPitch', [0.914222002029419, 0.8988821506500244, 0.8988821506500244, 0.9065520763397217, 0.9004161357879639, 0.9004161357879639, 0.9218921661376953, 0.9203581809997559]], ['LShoulderRoll', [0.09199810028076172, 0.10733795166015625, 0.10733795166015625, 0.2039799690246582, 0.21932005882263184, 0.21778607368469238, 0.24846601486206055, 0.24846601486206055]], ['LElbowYaw', [-1.776413917541504, -2.1154279708862305, -2.1154279708862305, -0.4771158695220947, -0.4096200466156006, -0.4157559871673584, -0.47251391410827637, -0.4709799289703369]], ['LElbowRoll', [-1.1964781284332275, -1.06455397605896, -1.06455397605896, -1.0660879611968994, -1.1504580974578857, -1.14125394821167, -1.1029040813446045, -1.1075060367584229]], ['LWristYaw', [-0.9495878219604492, -1.40211820602417, -1.40211820602417, -0.6842060089111328, -0.5706899166107178, -0.5706899166107178, -0.6565940380096436, -0.5798940658569336]], ['LHand', [0.30400002002716064, 0.6, 0.7, 0.5, 0.30400002002716064, 0.30400002002716064, 0.30400002002716064, 0.30400002002716064]], ['RShoulderPitch', [0.9081697463989258, 0.8790240287780762, 0.9097042083740234, 0.9633941650390625, 0.8621501922607422, 0.8652181625366211, 0.7194879055023193, 0.9756660461425781]], ['RShoulderRoll', [-0.24241399765014648, -0.2086658477783203, -0.2454819679260254, -0.257753849029541, -0.10588788986206055, -0.09821796417236328, -0.1534419059753418, -0.34825992584228516]], ['RElbowYaw', [0.41567206382751465, 0.34664201736450195, 0.5353240966796875, 0.6565101146697998, 0.516916036605835, 0.5583341121673584, 0.8390560150146484, 0.4985079765319824]], ['RElbowRoll', [1.3407578468322754, 1.4788179397583008, 1.3008737564086914, 1.4910898208618164, 1.5647220611572266, 1.563188076019287, 1.5555181503295898, 1.251786231994629]], ['RWristYaw', [0.29448604583740234, 1.0722241401672363, 0.590548038482666, 0.5966839790344238, 0.7194039821624756, 0.667248010635376, 0.5951499938964844, 0.5000419616699219]], ['RHand', [0.3051999807357788, 0.3051999807357788, 0.3051999807357788, 0.30479997396469116, 0.3051999807357788, 0.6, 0.4, 0.30479997396469116]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['HeadPitch', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['LShoulderPitch', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['LShoulderRoll', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['LElbowYaw', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['LElbowRoll', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['LWristYaw', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['LHand', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['RShoulderPitch', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['RShoulderRoll', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['RElbowYaw', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['RElbowRoll', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['RWristYaw', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]], ['RHand', [0.88, 1.63, 2.13, 3.13, 3.88, 4.63, 5.38, 6.38]]]]

        # if hobby_animations == False:
        #     Robot.puppet_show = puppet_show.puppet_show
        #     self.robot_1.robot.puppet_show()
        # # conrad added a sleep here
        # time.sleep(0.5)

        self.robot_2.robot.tts.post.say("{} is very talented.".format(self.robot_1.robot.exp_name))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.604438066482544, -0.604438066482544, -0.0813438892364502, -0.03072190284729004]], ['HeadPitch', [0.038308143615722656, 0.038308143615722656, -0.029187917709350586, 0.1288139820098877]], ['LShoulderPitch', [0.720937967300415, 0.7194039821624756, 0.724006175994873, 0.7301421165466309]], ['LShoulderRoll', [0.11961007118225098, 0.11961007118225098, 0.11500811576843262, 0.11500811576843262]], ['LElbowYaw', [-0.11509203910827637, -0.11509203910827637, -0.13963603973388672, -0.15497589111328125]], ['LElbowRoll', [-0.7899680137634277, -0.7899680137634277, -0.7884340286254883, -0.7899680137634277]], ['LWristYaw', [-0.6274480819702148, -0.6274480819702148, -0.6274480819702148, -0.6274480819702148]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6467999815940857]], ['RShoulderPitch', [0.8544800281524658, 0.9357819557189941, 0.955723762512207, 0.9449858665466309]], ['RShoulderRoll', [-0.2516179084777832, -0.22400593757629395, -0.2086658477783203, -0.28996801376342773]], ['RElbowYaw', [0.6795201301574707, 0.7148020267486572, 0.9725141525268555, 0.5031099319458008]], ['RElbowRoll', [0.9066357612609863, 1.0170841217041016, 1.1060562133789062, 1.1505417823791504]], ['RWristYaw', [1.425044059753418, 1.4281120300292969, 1.7349120378494263, 1.2041480541229248]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.88, 1.18, 1.58, 2.58]], ['HeadPitch', [0.88, 1.18, 1.58, 2.58]], ['LShoulderPitch', [0.88, 1.18, 1.58, 2.58]], ['LShoulderRoll', [0.88, 1.18, 1.58, 2.58]], ['LElbowYaw', [0.88, 1.18, 1.58, 2.58]], ['LElbowRoll', [0.88, 1.18, 1.58, 2.58]], ['LWristYaw', [0.88, 1.18, 1.58, 2.58]], ['LHand', [0.88, 1.18, 1.58, 2.58]], ['RShoulderPitch', [0.88, 1.18, 1.58, 2.58]], ['RShoulderRoll', [0.88, 1.18, 1.58, 2.58]], ['RElbowYaw', [0.88, 1.18, 1.58, 2.58]], ['RElbowRoll', [0.88, 1.18, 1.58, 2.58]], ['RWristYaw', [0.88, 1.18, 1.58, 2.58]], ['RHand', [0.88, 1.18, 1.58, 2.58]]]]

        self.robot_2.robot.tts.post.say("But, oh, {}, I forgot to ask where you are from".format(self.participant_2.exp_name))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.07512402534484863, 0.07665801048278809, 0.07819199562072754, 0.07819199562072754, 0.07819199562072754, 0.07665801048278809, 0.07819199562072754]], ['HeadPitch', [-0.08594608306884766, -0.08594608306884766, 0.1809699535369873, 0.1809699535369873, 0.18250393867492676, 0.2760779857635498, 0.21471810340881348]], ['LShoulderPitch', [0.7301421165466309, 0.7301421165466309, 0.6273641586303711, 0.6273641586303711, 0.6519081592559814, 0.7884340286254883, 0.8053081035614014]], ['LShoulderRoll', [0.11500811576843262, 0.11500811576843262, 0.19631004333496094, 0.19631004333496094, 0.1779019832611084, 0.01683211326599121, 0.09660005569458008]], ['LElbowYaw', [-0.15497589111328125, -0.15497589111328125, -0.38200807571411133, -0.3804740905761719, -0.38200807571411133, -0.3789398670196533, -0.3605320453643799]], ['LElbowRoll', [-0.7899680137634277, -0.7899680137634277, -0.5752079486846924, -0.5752079486846924, -0.6396360397338867, -0.63043212890625, -0.7899680137634277]], ['LWristYaw', [-0.6274480819702148, -0.6274480819702148, -1.850046157836914, -1.8485121726989746, -0.618243932723999, -0.14577198028564453, -0.48018407821655273]], ['LHand', [0.6467999815940857, 0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733]], ['RShoulderPitch', [0.9449858665466309, 0.9449858665466309, 0.9465198516845703, 0.9465198516845703, 0.9465198516845703, 0.9434518814086914, 0.9403839111328125]], ['RShoulderRoll', [-0.28229808807373047, -0.28229808807373047, -0.2915019989013672, -0.2915019989013672, -0.2915019989013672, -0.2945699691772461, -0.29917192459106445]], ['RElbowYaw', [0.55373215675354, 0.55373215675354, 0.5399260520935059, 0.5399260520935059, 0.5322561264038086, 0.47089600563049316, 0.4632260799407959]], ['RElbowRoll', [1.1045217514038086, 1.1045217514038086, 1.1213960647583008, 1.1213960647583008, 1.115260124206543, 1.1582121849060059, 1.1674160957336426]], ['RWristYaw', [1.8468940258026123, 1.8468940258026123, 1.8468940258026123, 1.8468940258026123, 1.8468940258026123, 0.9817180633544922, 0.5583341121673584]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['HeadPitch', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['LShoulderPitch', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['LShoulderRoll', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['LElbowYaw', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['LElbowRoll', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['LWristYaw', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['LHand', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['RShoulderPitch', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['RShoulderRoll', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['RElbowYaw', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['RElbowRoll', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['RWristYaw', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]], ['RHand', [0.5, 0.97, 1.5699999999999998, 2.2699999999999996, 2.7699999999999996, 3.7699999999999996, 4.97]]]]

        # if self.sr:
        #     self.participant_2_place = lstn.listen(self.robot_2.robot, 5)
        # else:
        #     self.participant_2_place = safe_input.safe_input("***TYPE*** participant's declared place of origin.\n", 'enter', True)
        # print(self.participant_2_place)

        if "brisbane" in self.participant_2_place or "australia" in self.participant_2_place:
            self.robot_2.robot.tts.post.say("{} is where I live, or so I'm told. It must be nice to live here, if you can get outside to explore. once in a while.".format(self.participant_2_place))
            joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.07665801048278809, 0.07665801048278809, 0.07665801048278809, 0.05364799499511719, 0.05058002471923828, 0.05058002471923828, 0.033705949783325195, 0.033705949783325195, 0.01222991943359375]], ['HeadPitch', [0.0858621597290039, 0.0858621597290039, 0.3220980167388916, 0.5061781406402588, 0.19937801361083984, 0.19937801361083984, 0.19170808792114258, 0.19170808792114258, 0.2638061046600342]], ['LShoulderPitch', [0.8651340007781982, 0.8651340007781982, 0.8666679859161377, 0.8651340007781982, 0.8697359561920166, 0.8697359561920166, 0.8697359561920166, 0.8682019710540771, 0.8697359561920166]], ['LShoulderRoll', [0.19631004333496094, 0.19631004333496094, 0.1840381622314453, 0.18250393867492676, 0.18250393867492676, 0.18250393867492676, 0.1518239974975586, 0.1518239974975586, 0.15642595291137695]], ['LElbowYaw', [-0.39734792709350586, -0.39734792709350586, -0.40348386764526367, -0.40348386764526367, -0.4050178527832031, -0.4050178527832031, -0.4387660026550293, -0.4387660026550293, -0.44643592834472656]], ['LElbowRoll', [-0.970980167388916, -0.970980167388916, -0.9602420330047607, -0.9633100032806396, -0.9556400775909424, -0.9571740627288818, -0.9433679580688477, -0.9433679580688477, -0.9356980323791504]], ['LWristYaw', [0.5429940223693848, 0.5429940223693848, 0.5429940223693848, 0.5429940223693848, 0.5429940223693848, 0.5429940223693848, -0.16111207008361816, -0.16111207008361816, -0.46637797355651855]], ['LHand', [0.6467999815940857, 0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733]], ['RShoulderPitch', [0.941917896270752, 0.941917896270752, 0.9035677909851074, 0.902033805847168, 1.1075901985168457, 1.1060562133789062, 1.0247540473937988, 1.0247540473937988, 0.9449858665466309]], ['RShoulderRoll', [-0.3068418502807617, -0.3068418502807617, -0.21940398216247559, -0.2286078929901123, -0.3145120143890381, -0.3206479549407959, -0.277695894241333, -0.277695894241333, -0.3083760738372803]], ['RElbowYaw', [0.45862412452697754, 0.45862412452697754, 0.4049339294433594, 0.3650500774383545, 2.103072166442871, 2.103072166442871, 0.8513281345367432, 0.8513281345367432, 0.46476006507873535]], ['RElbowRoll', [1.1812219619750977, 1.1812219619750977, 1.552450180053711, 1.5539841651916504, 1.2180380821228027, 1.2180380821228027, 1.3499622344970703, 1.3453598022460938, 1.1904258728027344]], ['RWristYaw', [0.5583341121673584, 0.5583341121673584, 1.6582120656967163, 1.6520761251449585, 1.8254181146621704, 1.8254181146621704, 1.4127720594406128, 1.4127720594406128, 0.5767421722412109]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
            time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['HeadPitch', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['LShoulderPitch', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['LShoulderRoll', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['LElbowYaw', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['LElbowRoll', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['LWristYaw', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['LHand', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['RShoulderPitch', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['RShoulderRoll', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['RElbowYaw', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['RElbowRoll', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['RWristYaw', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]], ['RHand', [0.87, 1.87, 2.5700000000000003, 3.5700000000000003, 4.37, 5.57, 6.07, 6.7700000000000005, 7.7700000000000005]]]]

        else:
            self.robot_2.robot.tts.post.say("Wow.  I would sure like to go to {} one day.".format(self.participant_2_place))
            joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.01222991943359375, 0.010695934295654297, 0.01222991943359375, 0.01222991943359375, 0.010695934295654297, 0.010695934295654297]], ['HeadPitch', [0.11347413063049316, 0.11347413063049316, 0.11347413063049316, 0.11347413063049316, 0.29755401611328125, 0.29755401611328125]], ['LShoulderPitch', [0.8405900001525879, 0.8405900001525879, 0.8651340007781982, 0.8666679859161377, 1.027738094329834, 1.0216021537780762]], ['LShoulderRoll', [0.03063797950744629, 0.029103994369506836, 0.26534008979797363, 0.26534008979797363, 0.36044812202453613, 0.3711860179901123]], ['LElbowYaw', [-0.31604599952697754, -0.31604599952697754, -0.7854499816894531, -0.7854499816894531, -0.6213119029998779, -0.5430779457092285]], ['LElbowRoll', [-1.5677061080932617, -1.5692400932312012, -1.553900122642517, -1.553900122642517, -1.29312002658844, -1.2992560863494873]], ['LWristYaw', [-1.432797908782959, -1.432797908782959, -1.8040261268615723, -1.8009581565856934, -1.0815119743347168, -0.5016598701477051]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733]], ['RShoulderPitch', [0.9695301055908203, 0.9710640907287598, 0.9725980758666992, 0.9725980758666992, 0.9725980758666992, 0.9710640907287598]], ['RShoulderRoll', [-0.43416404724121094, -0.4387660026550293, -0.41728997230529785, -0.41728997230529785, -0.3789398670196533, -0.37740588188171387]], ['RElbowYaw', [0.4371480941772461, 0.4371480941772461, 0.44481801986694336, 0.44481801986694336, 0.4724299907684326, 0.47396397590637207]], ['RElbowRoll', [1.3254179954528809, 1.3300199508666992, 1.3085441589355469, 1.3085441589355469, 1.2778639793395996, 1.2778639793395996]], ['RWristYaw', [1.0998361110687256, 1.0998361110687256, 1.0998361110687256, 1.0998361110687256, 1.0998361110687256, 1.0998361110687256]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6776000261306763, 0.6771999597549438]]]]
            time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['HeadPitch', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['LShoulderPitch', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['LShoulderRoll', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['LElbowYaw', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['LElbowRoll', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['LWristYaw', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['LHand', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['RShoulderPitch', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['RShoulderRoll', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['RElbowYaw', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['RElbowRoll', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['RWristYaw', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]], ['RHand', [0.72, 1.72, 2.32, 3.12, 3.92, 4.92]]]]


        #time.sleep(0.5)
        self.robot_2.robot.tts.post.say("{}, {} is from {} and enjoys {}".format(self.robot_1.robot.exp_name, self.participant_2.exp_name, self.participant_2_place, self.participant_2_hobby))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.8115279674530029, -0.8115279674530029, -0.9327139854431152, -0.9327139854431152, -0.8222661018371582, -0.8238000869750977, -0.5354080200195312, 0.02143406867980957]], ['HeadPitch', [0.05058002471923828, 0.05058002471923828, 0.21165013313293457, 0.21165013313293457, -0.04452800750732422, -0.04452800750732422, 0.01222991943359375, 0.24079608917236328]], ['LShoulderPitch', [1.0200681686401367, 1.0200681686401367, 1.0216021537780762, 1.0200681686401367, 1.0216021537780762, 1.0216021537780762, 1.0216021537780762, 1.0231361389160156]], ['LShoulderRoll', [0.37578797340393066, 0.37578797340393066, 0.3773219585418701, 0.3773219585418701, 0.3773219585418701, 0.37885594367980957, 0.3803901672363281, 0.3819241523742676]], ['LElbowYaw', [-0.5430779457092285, -0.5430779457092285, -0.5430779457092285, -0.5430779457092285, -0.5430779457092285, -0.5430779457092285, -0.5430779457092285, -0.5430779457092285]], ['LElbowRoll', [-1.3069260120391846, -1.3069260120391846, -1.3115280866622925, -1.3115280866622925, -1.3084601163864136, -1.3084601163864136, -1.3115280866622925, -1.309994101524353]], ['LWristYaw', [-0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6467999815940857, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733]], ['RShoulderPitch', [0.9695301055908203, 0.9695301055908203, 0.9695301055908203, 0.9695301055908203, 0.9695301055908203, 0.9695301055908203, 0.9695301055908203, 0.9695301055908203]], ['RShoulderRoll', [-0.35132789611816406, -0.35132789611816406, -0.3528618812561035, -0.3528618812561035, -0.35132789611816406, -0.35132789611816406, -0.3528618812561035, -0.3559298515319824]], ['RElbowYaw', [0.4693620204925537, 0.4693620204925537, 0.47089600563049316, 0.47089600563049316, 0.47089600563049316, 0.47089600563049316, 0.47396397590637207, 0.47089600563049316]], ['RElbowRoll', [1.251786231994629, 1.251786231994629, 1.2563881874084473, 1.2563881874084473, 1.2502517700195312, 1.2502517700195312, 1.251786231994629, 1.2548542022705078]], ['RWristYaw', [0.2730100154876709, 0.2730100154876709, 0.2730100154876709, 0.2730100154876709, 0.2730100154876709, 0.2730100154876709, 0.2730100154876709, 0.2730100154876709]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['HeadPitch', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['LShoulderPitch', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['LShoulderRoll', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['LElbowYaw', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['LElbowRoll', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['LWristYaw', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['LHand', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['RShoulderPitch', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['RShoulderRoll', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['RElbowYaw', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['RElbowRoll', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['RWristYaw', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]], ['RHand', [1.0, 1.8, 2.1, 2.5, 3.0, 4.8, 5.5, 6.3]]]]

        # # Read the generated opinions list from the file.
        # with open(opinions_path, "r") as f:
        #     opinions = json.load(f)

        # # The unicode and utf-8 crap is to overcome some of the debilities of Python 2.7.  Output is a string.
        # opinion_1 = unicode(opinions[0]).encode('utf-8') # type: ignore (suppressing superfluous warning)
        # opinion_2 = unicode(opinions[1]).encode('utf-8') # type: ignore (suppressing superfluous warning)

        if self.robot_1.robot.team_condition == "P":

            hobby_better_1 = self.participant_1_hobby
            hobby_worse_1 = self.participant_2_hobby

        elif self.robot_1.robot.team_condition == "O":

            hobby_better_1 = "playing puppets"
            hobby_worse_1 = self.participant_2_hobby
                
        self.robot_1.robot.tts.post.say("{} is fun, but, if you ask me {} is better.".format(hobby_worse_1, hobby_better_1))
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.4985079765319824, 0.4985079765319824, 0.3573801517486572, 0.3573801517486572, 0.3052239418029785, 0.05058002471923828, -0.0353238582611084]], ['HeadPitch', [0.038308143615722656, 0.038308143615722656, -0.02151799201965332, -0.02151799201965332, -0.029187917709350586, 0.18250393867492676, 0.24079608917236328]], ['LShoulderPitch', [1.024670124053955, 1.024670124053955, 1.0216021537780762, 1.0231361389160156, 1.0231361389160156, 1.0216021537780762, 1.024670124053955]], ['LShoulderRoll', [0.3819241523742676, 0.3819241523742676, 0.3803901672363281, 0.3803901672363281, 0.3803901672363281, 0.3803901672363281, 0.3819241523742676]], ['LElbowYaw', [-0.5430779457092285, -0.5430779457092285, -0.5461459159851074, -0.5461459159851074, -0.5461459159851074, -0.544611930847168, -0.544611930847168]], ['LElbowRoll', [-1.3115280866622925, -1.313062071800232, -1.3084601163864136, -1.3145960569381714, -1.313062071800232, -1.3161300420761108, -1.313062071800232]], ['LWristYaw', [-0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445, -0.5031938552856445]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733]], ['RShoulderPitch', [0.808459997177124, 0.8099939823150635, 0.8053920269012451, 0.8115279674530029, 0.848344087600708, 0.8468098640441895, 0.8529460430145264]], ['RShoulderRoll', [0.03984212875366211, 0.03217196464538574, 0.09966802597045898, 0.09046411514282227, -0.08748006820678711, -0.07980990409851074, -0.1733839511871338]], ['RElbowYaw', [0.42487597465515137, 0.4172060489654541, 0.7853660583496094, 0.8835420608520508, 0.5276541709899902, 0.46476006507873535, 0.39573001861572266]], ['RElbowRoll', [1.5248379707336426, 1.526371955871582, 1.2839999198913574, 1.1842899322509766, 0.7946538925170898, 0.7915859222412109, 0.9833359718322754]], ['RWristYaw', [1.421976089477539, 1.4235100746154785, 1.6014540195465088, 1.595318078994751, 1.3943641185760498, 1.0400099754333496, 0.6810541152954102]], ['RHand', [0.6776000261306763, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['HeadPitch', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['LShoulderPitch', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['LShoulderRoll', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['LElbowYaw', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['LElbowRoll', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['LWristYaw', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['LHand', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['RShoulderPitch', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['RShoulderRoll', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['RElbowYaw', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['RElbowRoll', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['RWristYaw', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]], ['RHand', [0.61, 2.11, 2.61, 3.41, 4.41, 5.41, 6.61]]]]

        # # Robot 1 argues for one hobby over another while bobbing head.
        # bob_n_speak.bns(self.robot_1.robot, opinion_1)
        # time.sleep(random.uniform(0.4, 1.1))

        if self.robot_1.robot.team_condition == "P":

            self.robot_2.robot.tts.post.say("I'm afraid I must respectfully disagree.")
            joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.7394299507141113, 0.14108610153198242, 0.01683211326599121, -0.6550600528717041, -0.6550600528717041, -0.08748006820678711]], ['HeadPitch', [0.0827939510345459, 0.09813404083251953, 0.09046411514282227, 0.05058002471923828, 0.05058002471923828, 0.25]], ['LShoulderPitch', [0.7945699691772461, 0.8099100589752197, 0.8267841339111328, 0.8421239852905273, 0.8421239852905273, 0.8436579704284668]], ['LShoulderRoll', [0.17176604270935059, 0.17176604270935059, 0.17330002784729004, 0.17330002784729004, 0.17330002784729004, 0.17330002784729004]], ['LElbowYaw', [-0.24701595306396484, -0.27922987937927246, -0.32524991035461426, -0.3528618812561035, -0.3528618812561035, -0.38507604598999023]], ['LElbowRoll', [-0.9955241680145264, -0.9955241680145264, -0.9893879890441895, -0.9893879890441895, -0.9893879890441895, -0.9525721073150635]], ['LWristYaw', [0.02143406867980957, 0.02143406867980957, 0.02143406867980957, 0.02143406867980957, 0.02143406867980957, -0.524669885635376]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6467999815940857, 0.6467999815940857, 0.6471999883651733, 0.6471999883651733]], ['RShoulderPitch', [0.8636841773986816, 0.8636841773986816, 0.9311800003051758, 0.9327139854431152, 0.9327139854431152, 0.9327139854431152]], ['RShoulderRoll', [-0.14883995056152344, -0.15190792083740234, -0.37740588188171387, -0.36820197105407715, -0.3666679859161377, -0.3559298515319824]], ['RElbowYaw', [0.43254613876342773, 0.4310121536254883, 0.4049339294433594, 0.41874003410339355, 0.41874003410339355, 0.42947816848754883]], ['RElbowRoll', [0.9296460151672363, 0.9296460151672363, 1.2548542022705078, 1.242581844329834, 1.2441158294677734, 1.2364459037780762]], ['RWristYaw', [0.6427040100097656, 0.6427040100097656, 0.897348165512085, 0.897348165512085, 0.897348165512085, 0.897348165512085]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6776000261306763, 0.6776000261306763, 0.6771999597549438, 0.6771999597549438]]]]
            time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['HeadPitch', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['LShoulderPitch', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['LShoulderRoll', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['LElbowYaw', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['LElbowRoll', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['LWristYaw', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['LHand', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['RShoulderPitch', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['RShoulderRoll', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['RElbowYaw', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['RElbowRoll', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['RWristYaw', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]], ['RHand', [0.3, 0.7, 1.1, 1.52, 2.52, 3.52]]]]

        elif self.robot_1.robot.team_condition == "O":

            self.robot_2.robot.tts.post.say("What was our other opponent's hobby again?")
            joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.6903419494628906, -0.6903419494628906, -0.84527587890625, -0.84527587890625, -0.8529460430145264]], ['HeadPitch', [0.013764142990112305, 0.013764142990112305, 0.1318819522857666, 0.1318819522857666, -0.09975194931030273]], ['LShoulderPitch', [0.9633100032806396, 0.9633100032806396, 0.9633100032806396, 0.9633100032806396, 0.9633100032806396]], ['LShoulderRoll', [0.2791459560394287, 0.2791459560394287, 0.289884090423584, 0.28835010528564453, 0.28835010528564453]], ['LElbowYaw', [-0.5538160800933838, -0.5538160800933838, -0.5538160800933838, -0.5538160800933838, -0.5538160800933838]], ['LElbowRoll', [-1.142788052558899, -1.142788052558899, -1.1688660383224487, -1.1688660383224487, -1.1611961126327515]], ['LWristYaw', [-0.44029998779296875, -0.44029998779296875, -0.44029998779296875, -0.44029998779296875, -0.44029998779296875]], ['LHand', [0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338]], ['RShoulderPitch', [0.9940738677978516, 0.9940738677978516, 0.9818019866943359, 0.9818019866943359, 0.9204421043395996]], ['RShoulderRoll', [-0.23627805709838867, -0.23627805709838867, -0.24701595306396484, -0.24701595306396484, -0.2654240131378174]], ['RElbowYaw', [1.1949440240859985, 1.193410038948059, 1.4818021059036255, 1.4818021059036255, 0.4494199752807617]], ['RElbowRoll', [0.9357819557189941, 0.9357819557189941, 1.1505417823791504, 1.1474738121032715, 1.115260124206543]], ['RWristYaw', [1.21642005443573, 1.21642005443573, 1.331470012664795, 1.331470012664795, 0.7592880725860596]], ['RHand', [0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705]]]]
            time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['HeadPitch', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['LShoulderPitch', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['LShoulderRoll', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['LElbowYaw', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['LElbowRoll', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['LWristYaw', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['LHand', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['RShoulderPitch', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['RShoulderRoll', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['RElbowYaw', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['RElbowRoll', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['RWristYaw', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]], ['RHand', [1.0, 1.4, 1.93, 2.73, 3.5300000000000002]]]]
     
            self.robot_1.robot.tts.post.say("{}".format(self.participant_1_hobby))
            joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.8283181190490723, 0.8298521041870117, 0.0827939510345459]], ['HeadPitch', [-0.05066394805908203, -0.05066394805908203, 0.22238802909851074]], ['LShoulderPitch', [0.9633100032806396, 0.9633100032806396, 0.9617760181427002]], ['LShoulderRoll', [0.29141807556152344, 0.29141807556152344, 0.29141807556152344]], ['LElbowYaw', [-0.5262038707733154, -0.5262038707733154, -0.5262038707733154]], ['LElbowRoll', [-1.1611961126327515, -1.158128023147583, -1.1565940380096436]], ['LWristYaw', [-0.09514999389648438, -0.09514999389648438, -0.09514999389648438]], ['LHand', [0.6247999668121338, 0.6247999668121338, 0.6247999668121338]], ['RShoulderPitch', [0.8759560585021973, 0.8805580139160156, 0.8958978652954102]], ['RShoulderRoll', [-0.17491793632507324, -0.1795198917388916, -0.2838320732116699]], ['RElbowYaw', [0.3589141368865967, 0.3589141368865967, 0.4049339294433594]], ['RElbowRoll', [1.3545641899108887, 1.3745059967041016, 1.1352019309997559]], ['RWristYaw', [0.7792301177978516, 0.7838320732116699, 0.7822980880737305]], ['RHand', [0.5299999713897705, 0.5299999713897705, 0.5299999713897705]]]]
            time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.89, 1.49, 2.29]], ['HeadPitch', [0.89, 1.49, 2.29]], ['LShoulderPitch', [0.89, 1.49, 2.29]], ['LShoulderRoll', [0.89, 1.49, 2.29]], ['LElbowYaw', [0.89, 1.49, 2.29]], ['LElbowRoll', [0.89, 1.49, 2.29]], ['LWristYaw', [0.89, 1.49, 2.29]], ['LHand', [0.89, 1.49, 2.29]], ['RShoulderPitch', [0.89, 1.49, 2.29]], ['RShoulderRoll', [0.89, 1.49, 2.29]], ['RElbowYaw', [0.89, 1.49, 2.29]], ['RElbowRoll', [0.89, 1.49, 2.29]], ['RWristYaw', [0.89, 1.49, 2.29]], ['RHand', [0.89, 1.49, 2.29]]]]
                      
            self.robot_2.robot.tts.post.say("Oh my.  I would have to argue that my hobby of catching flies is a good deal more interesting than {}".format(self.participant_1_hobby))
            joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [-0.5507478713989258, -0.5507478713989258, -0.29303598403930664, -0.29303598403930664, -0.07520794868469238, -0.07520794868469238, -0.07980990409851074, -0.07980990409851074, -0.07213997840881348, -0.07213997840881348]], ['HeadPitch', [-0.18719005584716797, -0.18719005584716797, 0.06745409965515137, 0.06592011451721191, 0.16869807243347168, 0.16869807243347168, 0.010695934295654297, 0.01222991943359375, 0.18557214736938477, 0.18557214736938477]], ['LShoulderPitch', [0.8053081035614014, 0.8053081035614014, 0.8896780014038086, 0.8896780014038086, 0.8896780014038086, 0.8896780014038086, 0.8896780014038086, 0.8896780014038086, 0.8896780014038086, 0.8896780014038086]], ['LShoulderRoll', [-0.23474407196044922, -0.23474407196044922, 0.1487560272216797, 0.1487560272216797, 0.1487560272216797, 0.1487560272216797, 0.15029001235961914, 0.15029001235961914, 0.15029001235961914, 0.1518239974975586]], ['LElbowYaw', [-0.4939899444580078, -0.4939899444580078, -0.5062620639801025, -0.5062620639801025, -0.5093300342559814, -0.5093300342559814, -0.5047280788421631, -0.5047280788421631, -0.5169999599456787, -0.5123980045318604]], ['LElbowRoll', [-1.4296460151672363, -1.4281120300292969, -0.9188239574432373, -0.9188239574432373, -0.9203581809997559, -0.9218921661376953, -0.9126880168914795, -0.914222002029419, -0.9326300621032715, -0.931096076965332]], ['LWristYaw', [-0.14577198028564453, -0.14577198028564453, -0.5185339450836182, -0.5185339450836182, -0.5185339450836182, -0.5185339450836182, -0.5169999599456787, -0.5185339450836182, -0.5185339450836182, -0.5185339450836182]], ['LHand', [0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338, 0.6247999668121338]], ['RShoulderPitch', [0.8222661018371582, 0.8207318782806396, 0.7394299507141113, 0.734827995300293, 0.7394299507141113, 0.7394299507141113, 0.7455658912658691, 0.7455658912658691, 0.7164199352264404, 0.8376059532165527]], ['RShoulderRoll', [-0.015382051467895508, -0.015382051467895508, -0.24088001251220703, -0.23474407196044922, -0.25621986389160156, -0.257753849029541, -0.029187917709350586, -0.027653932571411133, -0.107421875, -0.0353238582611084]], ['RElbowYaw', [0.4954400062561035, 0.4954400062561035, 0.9080860614776611, 0.91115403175354, 0.9126880168914795, 0.9126880168914795, 0.7301421165466309, 0.7301421165466309, 0.6902580261230469, 0.5414600372314453]], ['RElbowRoll', [0.6826720237731934, 0.6826720237731934, 0.43723201751708984, 0.44643592834472656, 0.48938798904418945, 0.48938798904418945, 0.6090400218963623, 0.6105740070343018, 0.7961878776550293, 0.7133519649505615]], ['RWristYaw', [0.5077121257781982, 0.5092461109161377, 1.8514961004257202, 1.8514961004257202, 1.8514961004257202, 1.8514961004257202, 1.4956080913543701, 1.4956080913543701, 0.14415407180786133, 0.7286081314086914]], ['RHand', [0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705, 0.5299999713897705]]]]
            time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['HeadPitch', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['LShoulderPitch', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['LShoulderRoll', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['LElbowYaw', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['LElbowRoll', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['LWristYaw', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['LHand', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['RShoulderPitch', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['RShoulderRoll', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['RElbowYaw', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['RElbowRoll', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['RWristYaw', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]], ['RHand', [1.2, 1.52, 2.8200000000000003, 3.3200000000000003, 3.8200000000000003, 4.220000000000001, 4.920000000000001, 5.820000000000001, 6.620000000000001, 7.820000000000001]]]]

        # # Robot 2 argues for one hobby over another while bobbing head.
        # bob_n_speak.bns(self.robot_2.robot, opinion_2)

        self.robot_1.robot.tts.post.say("Well, ahem, to each its own.")
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.047512054443359375, 0.04904603958129883, 0.04904603958129883, 0.04904603958129883, 0.04904603958129883, 0.04904603958129883, 0.038308143615722656]], ['HeadPitch', [0.2730100154876709, -0.01691603660583496, 0.3159620761871338, 0.31442809104919434, 0.31442809104919434, 0.3159620761871338, 0.26534008979797363]], ['LShoulderPitch', [0.877406120300293, 0.8835420608520508, 0.8835420608520508, 0.8835420608520508, 0.8820080757141113, 0.8820080757141113, 0.8835420608520508]], ['LShoulderRoll', [0.16256213188171387, 0.16563010215759277, 0.16102814674377441, 0.1579599380493164, 0.1579599380493164, 0.1579599380493164, 0.15949392318725586]], ['LElbowYaw', [-0.4587080478668213, -0.45717406272888184, -0.467911958694458, -0.48018407821655273, -0.48018407821655273, -0.48018407821655273, -0.4771158695220947]], ['LElbowRoll', [-0.9418339729309082, -0.951038122177124, -0.9449019432067871, -0.9541060924530029, -0.9602420330047607, -0.9602420330047607, -0.9402999877929688]], ['LWristYaw', [-0.524669885635376, -0.524669885635376, -0.524669885635376, -0.524669885635376, -0.524669885635376, -0.524669885635376, -0.524669885635376]], ['LHand', [0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733, 0.6471999883651733]], ['RShoulderPitch', [0.3497939109802246, 0.4126880168914795, 0.4786500930786133, 0.7118179798126221, 0.8314700126647949, 0.8330039978027344, 0.848344087600708]], ['RShoulderRoll', [0.07359004020690918, 0.024502038955688477, 0.022968053817749023, 0.21932005882263184, 0.07665801048278809, 0.07359004020690918, -0.127363920211792]], ['RElbowYaw', [0.42947816848754883, 0.48470211029052734, 0.5015759468078613, 1.5278220176696777, 1.3069260120391846, 1.3069260120391846, 0.42487597465515137]], ['RElbowRoll', [1.5555181503295898, 1.5478482246398926, 1.5539841651916504, 1.455808162689209, 1.2471837997436523, 1.245649814605713, 0.8928298950195312]], ['RWristYaw', [0.04444408416748047, 0.0060939788818359375, -0.004643917083740234, 0.36351609230041504, 0.41874003410339355, 0.41874003410339355, 0.8037741184234619]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['HeadPitch', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['LShoulderPitch', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['LShoulderRoll', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['LElbowYaw', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['LElbowRoll', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['LWristYaw', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['LHand', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['RShoulderPitch', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['RShoulderRoll', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['RElbowYaw', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['RElbowRoll', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['RWristYaw', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]], ['RHand', [0.76, 1.06, 1.36, 2.46, 2.76, 3.0599999999999996, 3.8599999999999994]]]]
        
        self.robot_2.robot.tts.post.say("Anyway, that's enough chitchat.  Let's get to the game.")
        joint_angles = [angles_compressed for _, angles_compressed in [['HeadYaw', [0.03523993492126465, 0.03523993492126465, 0.007627964019775391, 0.004559993743896484, 0.0030260086059570312, 0.004559993743896484]], ['HeadPitch', [0.018366098403930664, 0.018366098403930664, 0.32669997215270996, 0.19170808792114258, 0.19170808792114258, 0.36351609230041504]], ['LShoulderPitch', [0.35584592819213867, 0.4540219306945801, 0.7700259685516357, 0.7822980880737305, 0.7822980880737305, 0.7822980880737305]], ['LShoulderRoll', [-0.06753802299499512, 0.6074221134185791, 0.11961007118225098, 0.12421202659606934, 0.12421202659606934, 0.12114405632019043]], ['LElbowYaw', [-0.27002596855163574, -0.24241399765014648, -0.2623560428619385, -0.2715599536895752, -0.2715599536895752, -0.2884340286254883]], ['LElbowRoll', [-1.0461461544036865, -0.7730941772460938, -0.8191139698028564, -0.8191139698028564, -0.8191139698028564, -0.8206479549407959]], ['LWristYaw', [-0.3728039264678955, -0.11969399452209473, -0.5338740348815918, -0.5338740348815918, -0.5338740348815918, -0.5323400497436523]], ['LHand', [0.6471999883651733, 0.6467999815940857, 0.6467999815940857, 0.6471999883651733, 0.6467999815940857, 0.6471999883651733]], ['RShoulderPitch', [0.8007900714874268, 0.7977218627929688, 0.7961878776550293, 0.8023240566253662, 0.8023240566253662, 0.8023240566253662]], ['RShoulderRoll', [0.09353208541870117, 0.09199810028076172, 0.09813404083251953, 0.04444408416748047, 0.04444408416748047, 0.06592011451721191]], ['RElbowYaw', [0.5583341121673584, 0.556800127029419, 0.5598680973052979, 0.5429940223693848, 0.5429940223693848, 0.5199840068817139]], ['RElbowRoll', [0.4648439884185791, 0.4556400775909424, 0.45717406272888184, 0.5292720794677734, 0.5292720794677734, 0.5262038707733154]], ['RWristYaw', [0.5583341121673584, 0.5598680973052979, 0.5598680973052979, 1.5554341077804565, 1.556968092918396, 0.8359880447387695]], ['RHand', [0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438, 0.6771999597549438]]]]
        time_points = [time_points_compressed for _, time_points_compressed in [['HeadYaw', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['HeadPitch', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['LShoulderPitch', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['LShoulderRoll', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['LElbowYaw', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['LElbowRoll', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['LWristYaw', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['LHand', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['RShoulderPitch', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['RShoulderRoll', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['RElbowYaw', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['RElbowRoll', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['RWristYaw', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]], ['RHand', [0.6, 1.1, 1.81, 2.41, 3.41, 4.41]]]]

        if self.robot_1.robot.team_condition == 'O':
            self.robot_2.robot.tts.post.say("Oh Experimenter.  Please put us in our game positions.")

        # files.save_file(config_pw.intro_finished_path, "complete")

    def simple_welcome(self):
        player_type = "partner" if self.robot_1.team_condition == 'P' else "opponent"

        activated = self.robot_1.robot.tm.wait_for_touch_activate()

        self.robot_1.robot.mm.use_motion_library("head_touch_up")
        self.robot_1.robot.mm.use_motion_library("head_touch_down_snoozy")
        self.robot_2.robot.tts.post.say("Oh {}. Wake up.".format(self.robot_1.name))
        self.robot_2.robot.mm.use_motion_library("head_touch_up_2")
        self.robot_1.robot.leds.post.fadeRGB("FaceLeds", 0xFFFFFF, 0.1)
        self.robot_1.robot.leds.post.fadeRGB("ChestLeds", 0xFFFFFF, 0.1)
        self.robot_1.robot.tts.post.say("Oh. Oh my. Our {}'s are here.".format(player_type))
        self.robot_1.robot.mm.use_motion_library("team_is_here")

        self.robot_1.robot.tts.post.say("Hello, and welcome to the experiment.")
        self.robot_1.robot.mm.use_motion_library("welcome_1_greetings")

        self.robot_2.robot.tts.post.say("Greetings.")
        self.robot_2.robot.mm.use_motion_library("welcome_2_greetings")

        self.robot_1.robot.tts.post.say("My name is {}".format(self.robot_1.name))
        self.robot_1.robot.mm.use_motion_library("welcome_1_my_name_is")

        self.robot_1.robot.tts.post.say("What is your name? Dear human")
        self.robot_1.robot.mm.use_motion_library("welcome_1_ask_name")

        participant_1_name = self.robot_1.robot.am.listen_until_confirmed()
        
        self.robot_1.robot.tts.post.say("If I am not mistaken, you, {}, are my {} in the game today.".format(participant_1_name, player_type))
        self.robot_1.robot.mm.use_motion_library("you_are_in_the_game")

        #todo: robot1 handshake
        
        self.robot_1.robot.mm.sit_gently()
        self.robot_1.robot.tts.say("I am looking forward to playing with you")
       
        self.robot_2.robot.tts.post.say("and I am: {}. At your service".format(self.robot_2.name))
        self.robot_2.robot.mm.use_motion_library("at_your_service")
        self.robot_2.robot.tts.post.say("May I enquire what your name is")
        self.robot_2.robot.mm.use_motion_library("check_name") 
        participant_2_name = self.robot_2.robot.am.listen_until_confirmed()
        
        self.robot_2.robot.tts.say("If I am not mistaken, you, {}, are my {} in the game today.".format(participant_2_name, player_type))

        #todo: robot2 handshake

        self.robot_1.robot.tts.post.say("Lets Begin.")
        self.robot_2.robot.tts.post.say("Lets Begin.")
        return participant_1_name, participant_2_name
        
    def simple_hobby(self, participant_1_name, participant_2_name):
        self.robot_1.robot.tts.post.say("So, {}, lets get to know each other a little bit.".format(participant_1_name))
        self.robot_1.robot.mm.use_motion_library("lets_get_to_know_each_other")
        
        self.robot_1.robot.tts.post.say("{} and I are from Frantsi pani fornia.  Where are you from".format(self.robot_2.name))
        self.robot_1.robot.mm.use_motion_library("where_are_you_from")
        
        participant_1_place = self.robot_1.robot.am.listen_until_confirmed() 
        
        if participant_1_place.lower() in ["brisbane", "australia"]:
            self.robot_1.robot.tts.post.say("Nice. I hope I can escape this dundge atory some day and see something of {}".format(participant_1_place))
            self.robot_1.robot.mm.use_motion_library("lives_in_brisbane")
        else:
            self.robot_1.robot.tts.post.say("{}, ah, that must be a nice place to live".format(participant_1_place))
            self.robot_1.robot.mm.use_motion_library("nice_place_to_live")
        
        self.robot_1.robot.tts.post.say("And what is one of your favorite hobbies, {}".format(participant_1_name))
        self.robot_1.robot.mm.use_motion_library("what_are_your_hobbies")
        
        participant_1_hobby = self.robot_1.robot.am.listen_until_confirmed() 

        self.robot_1.robot.tts.post.say("Cool: {} is very cool.".format(participant_1_hobby))
        self.robot_1.robot.mm.use_motion_library("cool_hobby")

        self.robot_2.robot.tts.post.say("And what about you, {}.  What is a hobby of yours?".format(participant_2_name))
        self.robot_2.robot.mm.use_motion_library("what_is_ur_hobby")
        
        participant_2_hobby = self.robot_2.robot.am.listen_until_confirmed() 

        self.robot_2.robot.tts.post.say("{} sounds like a lot of fun.".format(participant_2_hobby))
        self.robot_2.robot.mm.use_motion_library("what_is_ur_hobby_2")

        self.robot_2.robot.tts.post.say("My hobby is catching flies, like this, see?")
        self.robot_2.robot.mm.use_motion_library("my_hobby_is_catching_fly")
        self.robot_2.robot.mm.catch_fly()
        
        self.robot_1.robot.tts.post.say("{} is really athletic.  My hobby is playing puppets.  This is my latest routine.".format(self.robot_2.name))
        self.robot_1.robot.mm.use_motion_library("my_hobby_is_playing_puppets")
        self.robot_1.robot.mm.puppet_show()
        
        self.robot_2.robot.tts.post.say("{} is very talented.".format(self.robot_1.name))
        self.robot_2.robot.mm.use_motion_library("very_talented")

        self.robot_2.robot.tts.post.say("But, oh, {}, I forgot to ask where you are from".format(participant_2_name))
        self.robot_2.robot.mm.use_motion_library("where_are_you_from")
        
        participant_2_place = self.robot_2.robot.am.listen_until_confirmed() 
        
        if participant_2_place.lower() in ["brisbane", "australia"]:
            self.robot_2.robot.tts.post.say("{} is where I live, or so I'm told. It must be nice to live here, if you can get outside to explore. once in a while.".format(participant_2_place))
            self.robot_2.robot.mm.use_motion_library("brisbane_is_where_I_live")
        else:
            self.robot_2.robot.tts.post.say("Wow. I would sure like to go to {} one day".format(participant_2_place))
            self.robot_2.robot.mm.use_motion_library("i_would_like_to_visit")

        self.robot_2.robot.tts.post.say("{}, {} is from {} and enjoys {}".format(self.robot_1.name, participant_2_name, participant_2_place, participant_2_hobby))
        self.robot_2.robot.mm.use_motion_library("enjoys_hobby")

        if self.robot_1.team_condition == "P":
            hobby_better_1 = participant_1_hobby
            hobby_worse_1 = participant_2_hobby
            hobby_better_2 = participant_2_hobby
            hobby_worse_2 = participant_1_hobby
        else:
            hobby_better_1 = "playing puppets"
            hobby_worse_1 = participant_2_hobby
            hobby_better_2 = "catching flys"
            hobby_worse_2 = participant_1_hobby

        robot_1_opinion = self.robot_1.generate_opinion(hobby_better_1, hobby_worse_1, False)
        robot_2_opinion = self.robot_2.generate_opinion(hobby_better_2, hobby_worse_2, True)

        self.robot_1.robot.tts.post.say("{} is fun, but, if you ask me {} is better.".format(hobby_worse_1, hobby_better_2))
        self.robot_1.robot.mm.use_motion_library("hobby_is_better")
        
        self.robot_1.robot.mm.bob_n_speak(robot_1_opinion)

        if self.robot_1.team_condition == "P":
            self.robot_2.robot.tts.post.say("I'm afraid I must respectfully disagree.")
            self.robot_2.robot.mm.use_motion_library("respectfully_disagree")
        else:
            self.robot_2.robot.tts.post.say("What was our other opponent's hobby again?")
            self.robot_2.robot.mm.use_motion_library("what_was_opponents_hobby")
            self.robot_1.robot.tts.post.say("{}".format(participant_1_hobby))
            self.robot_1.robot.mm.use_motion_library("say_hobby")
            self.robot_2.robot.tts.post.say("Oh my.  I would have to argue that my hobby of catching flies is a good deal more interesting than {}".format(participant_1_hobby))
            self.robot_2.robot.mm.use_motion_library("catching_flies_more_interesting")

        self.robot_2.robot.mm.bob_n_speak(robot_2_opinion)

        self.robot_1.robot.tts.post.say("Well, ahem, to each its own.")
        self.robot_2.robot.mm.use_motion_library("to_each_its_own")

        self.robot_2.robot.tts.post.say("Anyway, that's enough chitchat.  Let's get to the game.")
        self.robot_2.robot.mm.use_motion_library("lets_get_to_the_game")
        
        if self.robot_1.team_condition == 'O':
            self.robot_2.robot.tts.say("Oh Experimenter.  Please put us in our game positions.")

    def simple_outro(self, participant_1_name, participant_2_name):
        self.robot_1.tts.post.say("I don't know about you, {}, but I'm weary and bleary after all the hinting: and guessing.".format(self.robot_2.name))
        self.robot_1.robot.mm.use_motion_library("outro_1")

        self.robot_2.tts.post.say("I know just what you mean, {}. I, myself am ready for a long, peaceful rest er roo, as the ozzies say.".format(self.robot_1.name))
        self.robot_2.robot.mm.use_motion_library("outro_2")
        self.robot_1.robot.mm.use_motion_library("outro_3")

        if self.robot_1.team_condition == 'O':
            self.robot_1.robot.tts.say("Oh Experimenter.  Can you give us a spin?")

        activated = self.robot_1.robot.tm.wait_for_touch_activate()

        self.robot_1.tts.post.say("Well, {}, it was a great pleasure playing with you today".format(participant_1_name))
        self.robot_1.robot.mm.use_motion_library("outro_4")
        self.robot_2.robot.mm.use_motion_library("outro_5")
        
        self.robot_2.tts.post.say("And I had a wonderful time playing with you, {}.".format(participant_2_name))
        self.robot_1.robot.mm.use_motion_library("outro_6")
        self.robot_2.robot.mm.use_motion_library("outro_7")
        
        self.robot_1.tts.post.say("So, {}, shall we?".format(self.robot_2.name))
        self.robot_1.robot.mm.use_motion_library("outro_8")

        self.robot_2.tts.post.say("Lets")
        self.robot_2.robot.mm.use_motion_library("outro_9")

        self.wave_bye()
        self.robot_1.robot.mm.repose(leds=False)
        self.robot_2.robot.mm.repose(leds=False)

    def wave_bye(self):
        
        # Generate a random integer between 1 and 100
        random_number = random.randint(1, 100)
        if random_number % 2 == 0:
            robo_rand1 = self.robot_1.robot
            robo_rand2 = self.robot_2.robot
        else:
            robo_rand1 = self.robot_2.robot
            robo_rand2 = self.robot_1.robot
    
        current_posture1 = robo_rand1.posture.getPosture()
        current_posture2 = robo_rand2.posture.getPosture()
        
        #wave bye, sitting version (same as wave_bye3)
        if current_posture1 == 'Sit' and current_posture2 == 'Sit':   

            joint_names_list1 = ['HeadYaw', 'HeadPitch', 'LShoulderPitch', 'LShoulderRoll', 'LElbowYaw', 'LElbowRoll', 'LWristYaw', 'LHand', 'LHipYawPitch', 'LHipRoll', 'LHipPitch', 'LKneePitch', 'LAnklePitch', 'LAnkleRoll', 'RHipYawPitch', 'RHipRoll', 'RHipPitch', 'RKneePitch', 'RAnklePitch', 'RAnkleRoll', 'RShoulderPitch', 'RShoulderRoll', 'RElbowYaw', 'RElbowRoll', 'RWristYaw', 'RHand']
            time_points_list1 = [[1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 6.0]]
            joint_angles_list1 = [[-0.04452800750732422, -0.04452800750732422, -0.04452800750732422, -0.04452800750732422, -0.04452800750732422, -0.04452800750732422, -0.04452800750732422, -0.04452800750732422], [-0.07060599327087402, -0.07060599327087402, -0.07060599327087402, -0.07060599327087402, -0.07060599327087402, -0.07060599327087402, -0.07060599327087402, -0.07060599327087402], [0.9295620918273926, 0.9295620918273926, 0.9295620918273926, 0.9295620918273926, 0.9280281066894531, 0.9295620918273926, 0.9295620918273926, 0.9295620918273926], [0.2592041492462158, 0.2607381343841553, 0.2607381343841553, 0.2607381343841553, 0.2607381343841553, 0.2607381343841553, 0.2592041492462158, 0.2592041492462158], [-0.4326300621032715, -0.4326300621032715, -0.43416404724121094, -0.43416404724121094, -0.43416404724121094, -0.43416404724121094, -0.43416404724121094, -0.44336795806884766], [-1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566], [-4.1961669921875e-05, -0.0015759468078613281, 0.0030260086059570312, -0.0015759468078613281, 0.0014920234680175781, -4.1961669921875e-05, -4.1961669921875e-05, -0.0031099319458007812], [0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656], [-0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027], [0.2684919834136963, 0.27002596855163574, 0.27002596855163574, 0.2684919834136963, 0.2684919834136963, 0.2684919834136963, 0.27002596855163574, 0.26695799827575684], [-1.5354920625686646, -1.5354920625686646, -1.5354920625686646, -1.5354920625686646, -1.537026047706604, -1.537026047706604, -1.537026047706604, -1.5385600328445435], [1.3882280588150024, 1.3882280588150024, 1.3882280588150024, 1.3882280588150024, 1.3882280588150024, 1.3882280588150024, 1.3882280588150024, 1.386694073677063], [0.8497941493988037, 0.8497941493988037, 0.8497941493988037, 0.8497941493988037, 0.8497941493988037, 0.8497941493988037, 0.8497941493988037, 0.8513281345367432], [-0.010695934295654297, -0.009161949157714844, -0.009161949157714844, -0.009161949157714844, -0.009161949157714844, -0.010695934295654297, -0.009161949157714844, -0.010695934295654297], [-0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027, -0.5997519493103027], [-0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836], [-1.526371955871582, -1.5279059410095215, -1.529439926147461, -1.5279059410095215, -1.5279059410095215, -1.5279059410095215, -1.529439926147461, -1.5325078964233398], [1.4067201614379883, 1.4082541465759277, 1.4067201614379883, 1.4067201614379883, 1.4082541465759277, 1.4082541465759277, 1.4082541465759277, 1.4036521911621094], [0.8498780727386475, 0.8498780727386475, 0.8498780727386475, 0.8498780727386475, 0.8498780727386475, 0.8498780727386475, 0.8498780727386475, 0.8514120578765869], [0.019984006881713867, 0.019984006881713867, 0.018450021743774414, 0.019984006881713867, 0.019984006881713867, 0.018450021743774414, 0.019984006881713867, 0.019984006881713867], [0.2945699691772461, 0.14117002487182617, 0.1733839511871338, 0.20713186264038086, 0.31911396980285645, 0.3329200744628906, 0.39427995681762695, 0.9511218070983887], [-0.1764519214630127, -0.14577198028564453, -0.16264605522155762, -0.14117002487182617, -0.2086658477783203, -0.21940398216247559, -0.21326804161071777, -0.2807638645172119], [2.1107420921325684, 1.1796040534973145, 1.8514961004257202, 1.251702070236206, 1.958876132965088, 1.2762460708618164, 2.1076741218566895, 0.48777008056640625], [1.512566089630127, 1.526371955871582, 1.4220600128173828, 1.486487865447998, 1.446603775024414, 1.4941577911376953, 1.4097881317138672, 1.1658821105957031], [-1.0631041526794434, -1.1781539916992188, -1.205766201019287, -0.9204421043395996, -1.015550136566162, -1.0508317947387695, -1.0569682121276855, 0.6196939945220947], [0.6643999814987183, 0.9, 1, 1, 1, 0.8, 0.6, 0.3]]
            
            joint_names_list2 = ['HeadYaw', 'HeadPitch', 'LShoulderPitch', 'LShoulderRoll', 'LElbowYaw', 'LElbowRoll', 'LWristYaw', 'LHand', 'LHipYawPitch', 'LHipRoll', 'LHipPitch', 'LKneePitch', 'LAnklePitch', 'LAnkleRoll', 'RHipYawPitch', 'RHipRoll', 'RHipPitch', 'RKneePitch', 'RAnklePitch', 'RAnkleRoll', 'RShoulderPitch', 'RShoulderRoll', 'RElbowYaw', 'RElbowRoll', 'RWristYaw', 'RHand']
            joint_angles_list2 = [[0.04444408416748047, 0.04444408416748047, 0.04444408416748047, 0.14108610153198242, 0.14108610153198242, 0.14108610153198242, 0.14108610153198242, 0.14108610153198242, 0.14108610153198242], [0.038308143615722656, 0.038308143615722656, 0.038308143615722656, 0.038308143615722656, 0.038308143615722656, 0.038308143615722656, 0.038308143615722656, 0.038308143615722656, 0.038308143615722656], [0.9449019432067871, 0.9464361667633057, 0.9449019432067871, 0.9449019432067871, 0.9449019432067871, 0.9449019432067871, 0.9449019432067871, 0.9449019432067871, 0.9433679580688477], [0.29141807556152344, 0.2929520606994629, 0.2929520606994629, 0.2929520606994629, 0.2929520606994629, 0.2929520606994629, 0.2929520606994629, 0.2929520606994629, 0.27454400062561035], [-0.4617760181427002, -0.46024203300476074, -0.4617760181427002, -0.4617760181427002, -0.4617760181427002, -0.4617760181427002, -0.4617760181427002, -0.4617760181427002, -0.4709799289703369], [-1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.1734681129455566, -1.162730097770691], [-0.0031099319458007812, -0.0015759468078613281, -0.0031099319458007812, -0.0031099319458007812, -0.0031099319458007812, -0.0031099319458007812, -0.0031099319458007812, -0.0031099319458007812, 0.022968053817749023], [0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.2919999957084656, 0.3320000171661377], [-0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633], [0.2684919834136963, 0.2684919834136963, 0.2684919834136963, 0.2684919834136963, 0.2684919834136963, 0.2684919834136963, 0.2684919834136963, 0.2684919834136963, 0.2684919834136963], [-1.537026047706604, -1.537026047706604, -1.537026047706604, -1.537026047706604, -1.537026047706604, -1.537026047706604, -1.537026047706604, -1.537026047706604, -1.537026047706604], [1.386694073677063, 1.386694073677063, 1.386694073677063, 1.386694073677063, 1.3882280588150024, 1.386694073677063, 1.386694073677063, 1.386694073677063, 1.386694073677063], [0.8513281345367432, 0.8513281345367432, 0.8513281345367432, 0.8513281345367432, 0.8513281345367432, 0.8513281345367432, 0.8513281345367432, 0.8513281345367432, 0.8513281345367432], [-0.009161949157714844, -0.009161949157714844, -0.009161949157714844, -0.009161949157714844, -0.009161949157714844, -0.009161949157714844, -0.009161949157714844, -0.009161949157714844, -0.009161949157714844], [-0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633, -0.5982179641723633], [-0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836, -0.25460195541381836], [-1.5309739112854004, -1.5309739112854004, -1.5309739112854004, -1.5309739112854004, -1.5325078964233398, -1.5325078964233398, -1.5309739112854004, -1.5309739112854004, -1.5340418815612793], [1.4067201614379883, 1.4051861763000488, 1.4067201614379883, 1.4051861763000488, 1.4067201614379883, 1.4067201614379883, 1.4051861763000488, 1.4067201614379883, 1.4051861763000488], [0.8498780727386475, 0.8514120578765869, 0.8514120578765869, 0.8514120578765869, 0.8514120578765869, 0.8514120578765869, 0.8514120578765869, 0.8514120578765869, 0.8514120578765869], [0.02151799201965332, 0.02151799201965332, 0.02151799201965332, 0.02151799201965332, 0.02151799201965332, 0.02151799201965332, 0.02151799201965332, 0.02151799201965332, 0.02151799201965332], [0.18719005584716797, 0.15190792083740234, 0.15190792083740234, 0.08748006820678711, 0.08901405334472656, 0.09821796417236328, 0.12122797966003418, 0.34825992584228516, 0.9281120300292969], [-0.1104898452758789, -0.023051977157592773, 0.0060939788818359375, -0.06907200813293457, -0.0123138427734375, 0.038308143615722656, 0.019900083541870117, -0.0015759468078613281, -0.2546858787536621], [1.2701101303100586, 1.221022129058838, 1.2179540395736694, 1.2992560863494873, 1.515550136566162, 1.405102014541626, 1.460326075553894, 1.7379801273345947, 0.47396397590637207], [1.5325078964233398, 1.5048961639404297, 1.5156340599060059, 1.4987602233886719, 1.4926238059997559, 1.5033621788024902, 1.489555835723877, 1.5064301490783691, 1.115260124206543], [-1.2149701118469238, -1.0999197959899902, -1.0999197959899902, -1.1259980201721191, -1.1536102294921875, -1.1536102294921875, -1.172018051147461, -1.1766200065612793, 0.15642595291137695], [0.659600019454956, 1, 0.4, 0.9, 0.3, 0.9, 0.4, 1, 0.3]]
            time_points_list2 = [[1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5], [1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 6.5]]
            
            robo_rand1.tts.post.say("\\RSPD=50\\Bye.Bye. Bye. Bye.Bye.")
            robo_rand1.motion.post.angleInterpolation(joint_names_list1, joint_angles_list1, time_points_list1, True)
            
            robo_rand2.tts.post.say("\\RSPD=35\\Bye. Bye.Bye. Bye.")
            robo_rand2.motion.angleInterpolation(joint_names_list2, joint_angles_list2, time_points_list2, True)

        else:
            print('Current posture 1, {0}, or current posture 2, {1}, is incompatible with requested animation.'.format(current_posture1, current_posture2))
            return